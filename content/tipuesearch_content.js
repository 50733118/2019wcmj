var tipuesearch = {"pages": [{'title': '簡介', 'text': '在網際內容管理這門課,主要目的是學習到如何創建一個個人github倉儲,並用可攜式系統使用SSH上傳資料至個人網站,以及更新倉儲 \n 在這門課學習到的相關資料 : \n 網路連線設定 \n 配置可攜程式環境 \n 倉儲改版 \n 靜態 CMSimfly \n Mobile 網站內容 \n', 'tags': '', 'url': '簡介.html'}, {'title': '課程相關資料', 'text': '本資料來源: http://cpgx.kmol.info/wcm2019/content/index.html \n', 'tags': '', 'url': '課程相關資料.html'}, {'title': '網路連線設定', 'text': '了解機械設計系電腦輔助設計室電腦的網路設定, 其中包括 IPv4 網路與 IPv6 網路設定. 正常情況下, 電腦輔助設計室中的 64 台電腦透過 IPv4 協定下的 DHCP 與 NAT 上網, 各電腦以 DHCP client 取得 192.168.1.* 的網路位址, 然後以 NAT 的一組外部 IP 上網, 通常必須設定 Proxy Server 為 http://proxy.kmol.info:3128 後上網會比較順暢, 但若 8 台 Proxy Servers 無法正常運作時, 則取消 Proxy Server 的設定. 瀏覽器代理主機設定 了解如何設定 Google Chrome 與 Firefox 瀏覽器的代理主機設定. 申請 Github 帳號 利用 Gmail 帳號申請 Github 帳號, 申請後利用電子郵箱收信進行確認後, 就可以在 Github 上建立倉儲. \n', 'tags': '', 'url': '網路連線設定.html'}, {'title': '配置可攜式環境', 'text': '取得 Windows 10 64 位元環境下的可攜程式環境 (下載\xa0 2019_cdb_w5.7z), 下載後解開目錄, 放入 USB3.0 規格以上的隨身碟或隨身硬碟. 以滑鼠點擊 start.bat 開啟可攜隨身系統, 以 stop.bat 關閉可攜隨身系統, 隨身碟必須在關閉所有應用程式執行下, 才可正常退出. 了解基本的 DOS (Disk Operating System) 指令 C:\\> 符號為 DOS 命令列視窗的回應 (Prompt), 表示目前在 C 槽硬碟的 \\ 根目錄, 若要切換到 Y 槽, 則在電腦的回應後, 輸入 Y:, 命令列將轉為 Y:\\> 若要更換目錄, 則使用 cd, 也就是 change directory 的意思, 例如: Y:\\>cd tmp 表示要從 Y 槽的根目錄更換到 tmp 目錄, 也就是 Y:\\tmp> 若要再回到 Y 槽的根目錄, 可以使用 cd .. 表示要從目前所在目錄, 往上跳回一個目錄, 也就是重新回到 Y 槽的根目錄. 另外, 無論目前位於哪一個子目錄, 也可以使用 cd \\ 直接回到根目錄. 或者從 Y:\\> 直接使用 cd \\tmp\\repo\\ssh\\wcm2019 直接從 Y 槽的根目錄, 跳進 Y:\\tmp\\repo\\ssh\\wcm2019> 此外, 常用的 DOS 指令有: dir - 列出目前所在目錄的內容 mkdir - 隨後加上要建立目錄的名稱, 可以建立目錄 cls - clear screen, 清除目前的命令列顯示的內容 \n', 'tags': '', 'url': '配置可攜式環境.html'}, {'title': '倉儲改版', 'text': '建立 Git 倉儲, 並 clone 倉儲至近端工作後, 對遠端倉儲改版 可攜程式系統中已經內建 git, 可以在啟動 start.bat 後, 透過 path 的設定, 直接執行 git 指令. 建立 Git 倉儲, 共分為兩類, 一類是直接在 Github 網際介面下建立倉儲時, 要求建立 README.md 檔案, 之後可以直接在近端, 以 git clone 加上倉儲連線 URL, 將倉儲克隆一份到近端, 並以最新版本作為工作目錄, 使用者改版後, 可以直接透過 git add, commit 與 push 對遠端倉儲改版. 另一類則是故意在 Github 網際介面下建立倉儲時, 不要建立任何檔案, 而是在近端自行利用 git 指令建立倉儲架構, 新增內容後, 以 git remote add 設法在近端倉儲中納入 origin URL 後, 將近端倉儲版本新增提交推送到遠端. git add git add 可以用來新增一個檔案, 數個檔案, 或在之前提交後所新增的所有內容. git add 在 GIT 架構下, 是對所新增或修改的內容拍快照: git add . adds all modified and new (untracked) files in the current directory and all subdirectories to the staging area (a.k.a. the index), thus preparing them to be included in the next git commit . Any files matching the patterns in the .gitignore file will be ignored by git add git commit \xa0 git commit 執行之前, 必須使用 git config 建立臨時或永久的身分註記, 因為 GIT 在展開所有改版內容時, 必須明確登錄這些變更的作者與時間. 當使用者採用 git commit -m "改版說明訊息", 此次提交到 .git 目錄下的更動內容, 均會綁定使用者身分與改版所輸入的說明訊息. git push git push 在隨後沒有輸入遠端 URL 代號時, 表示要推送到 origin, 若透過 git remote add 設定其他代號與 URL 對應時, git push 加上代號, 就可以將此次的提交內容, 推送到指定的 URL 所在遠端倉儲. \n 靜態 CMSimfly \n 利用 CMSimfly (https://github.com/chiamingyen/cmsimfly) 內容, 建立自己的 Github Pages 網站 設法利用 \xa0 HTML5 CSS 與 Javascript , 納入與機械設計相關的靜態網頁內容 \n', 'tags': '', 'url': '倉儲改版.html'}, {'title': 'Moblie網站內容', 'text': '參考倉儲: \xa0 https://github.com/mdecourse/acmsimfly \n 參考網站: \n http://mde.tw/acmsimfly \n https://github.com/BlackrockDigital \n https://themewagon.com/theme_tag/bootstrap-4-templates/ \n https://github.com/kamranahmedse/developer-roadmap \xa0( blog ) \n 學習如何使用 CMSimfly, 在網站中加入各種內容 (導入 Bootstrap frontend framework) 使用 Flask, bs4 與 lxml 模組 了解 CMSimfly 如何建構, 並且嘗試修改現有功能, 除錯或建立自己的網際內容管理系統 \n', 'tags': '', 'url': 'Moblie網站內容.html'}, {'title': '架構CMSimfly', 'text': 'CMSimfly 以 Python 3 編寫, 利用 Flask 網路框架可以在伺服器運行, 讓使用者利用瀏覽器擷取動態 WWW 伺服器所送至近端的 html 加上 Javascript 程式碼, 然後在瀏覽器中顯示網際內容編輯器 (採用 tinymce4). \n 在使用者能夠透過 tinymce4 編輯各 CMSimfly 動態網際頁面之前, CMSimfly 利用 Beautiflysoup 4 對 config/content.htm 進行分頁, 然後將 H1 標註中的文字當作第一階的頁面, H2 與 H3 標註內容則當作第二階與第三階的頁面標題, 而標題與標題之間的 html 與 Javascript 則分別當作各階次頁面的內容. \n 因此 CMSimfly 可以在任何支援 Python 3 、Flask 與 Beautifulsoup 4 的環境中啟動 WWW 伺服器 (即在近端以 python wsgi.py 執行, 或在遠端以 uwsgi 與 nginx 執行 wsgi.py 中的 application), 接著使用者就可以根據伺服器啟動時所使用電腦的 IP 與埠號進行連線. \n 使用者連線後, Beautifulsoup 即對 config/content.htm 分頁, 然後根據頁面配置讓使用者在瀏覽器中使用 login 登入, 或者以動態的方式檢視各階次的分頁. \n 當使用者透過 login 登入 CMSimfly 成功後, 便可以指定頁面進行編輯, 修改後內容將存入 config/content.htm, 而尚未改版前的 content.htm 則改名為 content_backup.htm, 此一功能是防止 CMSimfly 因頁面解讀錯誤時, 誤刪資料時, 使用者可以從 content_backup.htm 取回上一版的資料內容. \n 動態轉靜態內容 \n 由於動態 CMSimfly 只能在 Python3 環境中運行, 而某些免費的雲端服務所提供的 WWW 伺服器僅提供 html 加上 Javascript 伺服, 因此為了讓 CMSimfly 動態系統的內容, 能夠將內容送到這些只提供 WWW 伺服器的系統中執行, CMSimfly 加入 generate_pages 的功能, 也就是根據 config/content.htm 中各頁面的標題與資料, 以 Beautifulsoup4 再結合 lxml 模組, 將 content.htm 疊上各頁面所選定的 css 與其他配置頁面格式的 Javascript, 轉成位於 content 目錄中的靜態網站內容, 此一包含 index.html 的各頁面 html 檔案, 可以在任何只支援 html 伺服器的環境中運行, 例如: Github Pages 或 Fossil SCM 中的 doc 伺服頁面功能. \n 截至目前的說明, 希望啟動 CMSimfly 動態運行, 需要 \xa0 Python 3 、Flask 與 Beautifulsoup 4\xa0, 若要將動態內容轉為靜態內容, 則額外需要 lxml 模組. \n Python 3 在隨身系統的模組安裝指令為: \n pip install flask bs4 lxml \n 表示要利用 pip 安裝 flask, bs4 與 lxml 模組. \n \n', 'tags': '', 'url': '架構CMSimfly.html'}, {'title': 'Game', 'text': '課本章節:\xa0 https://link.springer.com/chapter/10.1007/978-1-4842-4155-4_2 \xa0 \n The player throws a pair of dice. The sum of the two top faces is what matters so a 1 and a 3 is the same as 2 and 2. The sum of two 6-sided dice can be any number from 2 to 12. If the player throws a 7 or 11 on the first throw, the player wins. If the player throws a 2, 3, or 12, the player loses. For any other result (4, 5, 6, 8, 9, 10), this result is recorded as what is called the player’s point and a follow-up throw is required. On follow-up throws, a throw of 7 loses and a throw of the player’s point wins. For anything else, the game continues with the follow-up throw rules. \n', 'tags': '', 'url': 'Game.html'}, {'title': 'Game1', 'text': '\n Try it \n \n <p><button onclick="myFunction()">Try it</button></p>\n<p id="demo"></p>\n<script>// <![CDATA[\nfunction myFunction() {\n\xa0\xa0document.getElementById("demo").innerHTML = Math.floor(Math.random()*10);\n}\n// ]]></script> \n \n \n', 'tags': '', 'url': 'Game1.html'}, {'title': 'Game2', 'text': ' Your browser doesn\'t support the HTML5 element canvas.      Throw dice  \n Stage:   Point:   Outcome:  \n <script type="text/javascript">// <![CDATA[\nvar cwidth = 400;\n    var cheight = 300;\n    var dicex = 50;\n    var dicey = 50;\n    var dicewidth = 100;\n    var diceheight = 100;\n    var dotrad = 6;\n    var ctx;\n    var dx;\n    var dy;\n    var firstturn = true;\n    var point;\nfunction throwdice() {\n    var sum;\n    var ch = 1+Math.floor(Math.random()*6);\n    sum = ch;\n    dx = dicex;\n    dy = dicey;\n    drawface(ch);\n    dx = dicex + 150;\n    ch=1 + Math.floor(Math.random()*6);\n    sum += ch;\n    drawface(ch);\n    if (firstturn) {\n        switch(sum) {\n            case 7:\n            case 11:\n              document.f.outcome.value="You win!";\n              break;\n            case 2:\n            case 3:\n            case 12:\n              document.f.outcome.value="You lose!";\n              break;\n            default:\n              point = sum;\n              document.f.pv.value=point;\n              firstturn = false;\n              document.f.stage.value="Need follow-up throw.";\n              document.f.outcome.value="   ";\n        }\n    }\n    else {\n        switch(sum) {\n        case point:\n           document.f.outcome.value="You win!";\n           document.f.stage.value="Back to first throw.";\n           document.f.pv.value=" ";\n           firstturn = true;\n           break;\n        case 7:\n           document.f.outcome.value="You lose!";\n           document.f.stage.value="Back to first throw.";\n           document.f.pv.value=" ";\n           firstturn = true;\n        }\n            }\n}\nfunction drawface(n) {\n  ctx = document.getElementById(\'canvas\').getContext(\'2d\');  \n  ctx.lineWidth = 5;\n  ctx.clearRect(dx,dy,dicewidth,diceheight);\n  ctx.strokeRect(dx,dy,dicewidth,diceheight)\n  var dotx;\n  var doty;\n  ctx.fillStyle = "#009966";\n    switch(n) {\n        case 1:\n         draw1();\n         break;\n        case 2:\n         draw2();\n         break;\n        case 3:\n         draw2();\n         draw1();\n         break;\n        case 4:\n         draw4();\n         break;\n        case 5:\n         draw4();\n         draw1();\n         break;\n        case 6:\n         draw4();\n         draw2mid();\n         break;\n         \n    }\n}\nfunction draw1() {\n    var dotx;\n    var doty;\n    ctx.beginPath();\n    dotx = dx + .5*dicewidth;\n    doty = dy + .5*diceheight;\n    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);\n    ctx.closePath();\n    ctx.fill();\n}\nfunction draw2() {\n    var dotx;\n    var doty;\n    ctx.beginPath();\n    dotx = dx + 3*dotrad;\n    doty = dy + 3*dotrad;\n    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);\n    dotx = dx+dicewidth-3*dotrad;\n    doty = dy+diceheight-3*dotrad;\n    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);\n    ctx.closePath();\n    ctx.fill();\n}\nfunction draw4() {\n    var dotx;\n    var doty;\n    ctx.beginPath();\n    dotx = dx + 3*dotrad;\n    doty = dy + 3*dotrad;\n    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);\n    dotx = dx+dicewidth-3*dotrad;\n    doty = dy+diceheight-3*dotrad;\n    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);\n    ctx.closePath();\n    ctx.fill();\n    ctx.beginPath();\n    dotx = dx + 3*dotrad;\n    doty = dy + diceheight-3*dotrad;  //no change\n    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);\n    dotx = dx+dicewidth-3*dotrad;\n    doty = dy+ 3*dotrad;\n    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);\n    ctx.closePath();\n    ctx.fill(); \n}\nfunction draw2mid() {\n    var dotx;\n    var doty;\n    ctx.beginPath();\n    dotx = dx + 3*dotrad;\n    doty = dy + .5*diceheight;\n    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);\n    dotx = dx+dicewidth-3*dotrad;\n    doty = dy + .5*diceheight; //no change\n    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);\n    ctx.closePath();\n    ctx.fill();\n}\n// ]]></script>\n<p><canvas height="300" id="canvas" width="400"> Your browser doesn\'t support the HTML5 element canvas. </canvas> <br> <button onclick="throwdice();">Throw dice </button></p>\n<form id="f" name="f">Stage: <input name="stage" type="text" value="First Throw"> Point: <input name="pv" type="text" value="   "> Outcome: <input name="outcome" type="text" value="     "></form> \n \n', 'tags': '', 'url': 'Game2.html'}, {'title': '期中影片', 'text': '\n', 'tags': '', 'url': '期中影片.html'}, {'title': 'ROC Flag(W14)', 'text': '注意事項:需更改自己倉儲內的flaskapp.py檔才能顯示國旗 \n 以下是需更改的程式碼: \n def savePage() 的修改 \n def savePage():\n    """save all pages function"""\n    page_content = request.form[\'page_content\']\n    # when element_format : "html", need to remove the annoying comment to prevent brython exec\n    page_content = [w.replace(\'// <![CDATA[\', \'\') for w in page_content]\n    page_content = [w.replace(\'// ]]>\', \'\') for w in page_content]\n    # check if administrator \n def ssavePage() 的修改 \n def ssavePage():\n    """seperate save page function"""\n    page_content = request.form[\'page_content\']\n    # when element_format : "html", need to remove the annoying comment to prevent brython exec\n    page_content = page_content.replace(\'// <![CDATA[\', \'\')\n    page_content = page_content.replace(\'// ]]>\', \'\')\n    page_order = request.form[\'page_order\']\n    if not isAdmin(): \n 最新版本flaskapp.py: \n # coding: utf-8\nfrom flask import Flask, send_from_directory, request, redirect, \\\n    render_template, session, make_response, url_for, flash\nimport random\nimport math\nimport os\n# init.py 為自行建立的起始物件\nimport init\n# 利用 nocache.py 建立 @nocache decorator, 讓頁面不會留下 cache\nfrom nocache import nocache\n# the followings are for cmsimfly\nimport re\nimport os\nimport math\nimport hashlib\n# use quote_plus() to generate URL\nimport urllib.parse\n# use cgi.escape() to resemble php htmlspecialchars()\n# use cgi.escape() or html.escape to generate data for textarea tag, otherwise Editor can not deal with some Javascript code.\nimport cgi\nimport sys\n# for new parse_content function\n#from bs4 import BeautifulSoup\n# 為了使用 bs4.element, 改為 import bs4\nimport bs4\n# for ssavePage and savePage\nimport shutil\n \n# get the current directory of the file\n_curdir = os.path.join(os.getcwd(), os.path.dirname(__file__))\nsys.path.append(_curdir)\n \n# 由 init.py 中的 uwsgi = False 或 True 決定在 uwsgi 模式或近端模式執行\n \n#ends for cmsimfly\n \n# 假如隨後要利用 blueprint 架構時, 可以將程式放在子目錄中\n# 然後利用 register 方式導入\n# 導入 g1 目錄下的 user1.py\n#import users.g1.user1\n \n# 確定程式檔案所在目錄, 在 Windows 有最後的反斜線\n_curdir = os.path.join(os.getcwd(), os.path.dirname(__file__))\n# 表示程式在近端執行, 最後必須決定是由 init.py 或此地決定目錄設定\nconfig_dir = _curdir + "/config/"\nstatic_dir = _curdir + "/static"\ndownload_dir = _curdir + "./../downloads/"\nimage_dir = _curdir + "./../images/"\n \n# 利用 init.py 啟動, 建立所需的相關檔案\ninitobj = init.Init()\n# 取 init.py 中 Init 類別中的 class uwsgi 變數 (static variable) 設定\nuwsgi = init.Init.uwsgi\n \n# 必須先將 download_dir 設為 static_folder, 然後才可以用於 download 方法中的 app.static_folder 的呼叫\napp = Flask(__name__)\n \n# 設置隨後要在 blueprint 應用程式中引用的 global 變數\napp.config[\'config_dir\'] = config_dir\napp.config[\'static_dir\'] = static_dir\napp.config[\'download_dir\'] = download_dir\n \n# 使用 session 必須要設定 secret_key\n# In order to use sessions you have to set a secret key\n# set the secret key.  keep this really secret:\napp.secret_key = \'A0Zr9@8j/3yX R~XHH!jmN]LWX/,?R@T\'\n \n# 子目錄中註冊藍圖位置\n#app.register_blueprint(users.g1.user1.g1app)\n \n \n@app.route(\'/checkLogin\', methods=[\'POST\'])\ndef checkLogin():\n    """Check user login process."""\n    password = request.form["password"]\n    site_title, saved_password = parse_config()\n    hashed_password = hashlib.sha512(password.encode(\'utf-8\')).hexdigest()\n    if hashed_password == saved_password:\n        session[\'admin\'] = 1\n        return redirect(\'/edit_page\')\n    return redirect(\'/\')\n \n  \n@app.route(\'/delete_file\', methods=[\'POST\'])\ndef delete_file():\n    """Delete user uploaded files."""\n    if not isAdmin():\n        return redirect("/login")\n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n    filename = request.form[\'filename\']\n    if filename is None:\n        outstring = "no file selected!"\n        return set_css() + "<div class=\'container\'><nav>" + \\\n                   directory + "</nav><section><h1>Delete Error</h1>" + \\\n                   outstring + "<br/><br /></body></html>"\n    outstring = "delete all these files?<br /><br />"\n    outstring += "<form method=\'post\' action=\'doDelete\'>"\n    # only one file is selected\n    if isinstance(filename, str):\n        outstring += filename + "<input type=\'hidden\' name=\'filename\' value=\'" + \\\n                            filename + "\'><br />"\n    else:\n        # multiple files selected\n        for index in range(len(filename)):\n            outstring += filename[index] + "<input type=\'hidden\' name=\'filename\' value=\'" + \\\n                                filename[index]+"\'><br />"\n    outstring += "<br /><input type=\'submit\' value=\'delete\'></form>"\n \n    return set_css() + "<div class=\'container\'><nav>" + \\\n               directory + "</nav><section><h1>Download List</h1>" + \\\n               outstring + "<br/><br /></body></html>"\n \n \n@app.route(\'/doDelete\', methods=[\'POST\'])\ndef doDelete():\n    """Action to delete user uploaded files."""\n    if not isAdmin():\n        return redirect("/login")\n    # delete files\n    filename = request.form[\'filename\']\n    outstring = "all these files will be deleted:<br /><br />"\n    # only select one file\n    if isinstance(filename, str):\n        try:\n            os.remove(download_dir + "/" + filename)\n            outstring += filename + " deleted!"\n        except:\n            outstring += filename + "Error, can not delete files!<br />"\n    else:\n        # multiple files selected\n        for index in range(len(filename)):\n            try:\n                os.remove(download_dir + "/" + filename[index])\n                outstring += filename[index] + " deleted!<br />"\n            except:\n                outstring += filename[index] + "Error, can not delete files!<br />"\n \n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n \n    return set_css() + "<div class=\'container\'><nav>" + \\\n               directory + "</nav><section><h1>Download List</h1>" + \\\n               outstring + "<br/><br /></body></html>"\n \n \n@app.route(\'/doSearch\', methods=[\'POST\'])\ndef doSearch():\n    """Action to search content.htm using keyword"""\n    if not isAdmin():\n        return redirect("/login")\n    else:\n        keyword = request.form[\'keyword\']\n        head, level, page = parse_content()\n        directory = render_menu(head, level, page)\n        match = ""\n        for index in range(len(head)):\n            if (keyword != "" or None) and (keyword.lower() in page[index].lower() or \\\n            keyword.lower() in head[index].lower()): \\\n                match += "<a href=\'/get_page/" + head[index] + "\'>" + \\\n                                head[index] + "</a><br />"\n        return set_css() + "<div class=\'container\'><nav>"+ \\\n                   directory + "</nav><section><h1>Search Result</h1>keyword: " + \\\n                   keyword.lower() + "<br /><br />in the following pages:<br /><br />" + \\\n                   match + "</section></div></body></html>"\n \n \n@app.route(\'/download/\', methods=[\'GET\'])\ndef download():\n    """Download file using URL."""\n    filename = request.args.get(\'filename\')\n    type = request.args.get(\'type\')\n    if type == "files":\n        return send_from_directory(download_dir, filename=filename)\n    else:\n    # for image files\n        return send_from_directory(image_dir, filename=filename)\n     \n \n@app.route(\'/download_list\', methods=[\'GET\'])\ndef download_list():\n    """List files in downloads directory."""\n    if not isAdmin():\n        return redirect("/login")\n    else:\n        if not request.args.get(\'edit\'):\n            edit= 1\n        else:\n            edit = request.args.get(\'edit\')\n        if not request.args.get(\'page\'):\n            page = 1\n        else:\n            page = request.args.get(\'page\')\n        if not request.args.get(\'item_per_page\'):\n            item_per_page = 10\n        else:\n            item_per_page = request.args.get(\'item_per_page\')\n        if not request.args.get(\'keyword\'):\n            keyword = ""\n        else:\n            keyword = request.args.get(\'keyword\')\n            session[\'download_keyword\'] = keyword\n    files = os.listdir(download_dir)\n    if keyword is not "":\n        files = [elem for elem in files if str(keyword) in elem]\n    files.sort()\n    total_rows = len(files)\n    totalpage = math.ceil(total_rows/int(item_per_page))\n    starti = int(item_per_page) * (int(page) - 1) + 1\n    endi = starti + int(item_per_page) - 1\n    outstring = "<form method=\'post\' action=\'delete_file\'>"\n    notlast = False\n    if total_rows > 0:\n        outstring += "<br />"\n        if (int(page) * int(item_per_page)) < total_rows:\n            notlast = True\n        if int(page) > 1:\n            outstring += "<a href=\'"\n            outstring += "download_list?&page=1&item_per_page=" + str(item_per_page) + \\\n                                "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'><<</a> "\n            page_num = int(page) - 1\n            outstring += "<a href=\'"\n            outstring += "download_list?&page=" + str(page_num) + "&item_per_page=" + \\\n                                str(item_per_page) + "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'>Previous</a> "\n \n        span = 10\n \n        for index in range(int(page)-span, int(page)+span):\n            if index>= 0 and index< totalpage:\n                page_now = index + 1\n                if page_now == int(page):\n                    outstring += "<font size=\'+1\' color=\'red\'>" + str(page) + " </font>"\n                else:\n                    outstring += "<a href=\'"\n                    outstring += "download_list?&page=" + str(page_now) + "&item_per_page=" + \\\n                                        str(item_per_page) + "&keyword=" + str(session.get(\'download_keyword\'))\n                    outstring += "\'>"+str(page_now) + "</a> "\n \n        if notlast == True:\n            nextpage = int(page) + 1\n            outstring += " <a href=\'"\n            outstring += "download_list?&page=" + str(nextpage) + "&item_per_page=" + \\\n                                str(item_per_page) + "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'>Next</a>"\n            outstring += " <a href=\'"\n            outstring += "download_list?&page=" + str(totalpage) + "&item_per_page=" + \\\n                                str(item_per_page) + "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'>>></a><br /><br />"\n \n        if (int(page) * int(item_per_page)) < total_rows:\n            notlast = True\n            outstring += downloadlist_access_list(files, starti, endi) + "<br />"\n        else:\n            outstring += "<br /><br />"\n            outstring += downloadlist_access_list(files, starti, total_rows) + "<br />"\n \n        if int(page) > 1:\n            outstring += "<a href=\'"\n            outstring += "download_list?&page=1&item_per_page=" + str(item_per_page) + \\\n                                "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'><<</a> "\n            page_num = int(page) - 1\n            outstring += "<a href=\'"\n            outstring += "download_list?&page=" + str(page_num) + "&item_per_page=" + \\\n                                str(item_per_page) + "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'>Previous</a> "\n \n        span = 10\n \n        for index in range(int(page)-span, int(page)+span):\n        #for ($j=$page-$range;$j<$page+$range;$j++)\n            if index >=0 and index < totalpage:\n                page_now = index + 1\n                if page_now == int(page):\n                    outstring += "<font size=\'+1\' color=\'red\'>" + str(page)+" </font>"\n                else:\n                    outstring += "<a href=\'"\n                    outstring += "download_list?&page=" + str(page_now) + \\\n                                        "&item_per_page=" + str(item_per_page) + \\\n                                        "&keyword=" + str(session.get(\'download_keyword\'))\n                    outstring += "\'>" + str(page_now)+"</a> "\n \n        if notlast == True:\n            nextpage = int(page) + 1\n            outstring += " <a href=\'"\n            outstring += "download_list?&page=" + str(nextpage) + "&item_per_page=" + \\\n                                str(item_per_page) + "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'>Next</a>"\n            outstring += " <a href=\'"\n            outstring += "download_list?&page=" + str(totalpage) + "&item_per_page=" + \\\n                                str(item_per_page) + "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'>>></a>"\n    else:\n        outstring += "no data!"\n    outstring += "<br /><br /><input type=\'submit\' value=\'delete\'><input type=\'reset\' value=\'reset\'></form>"\n \n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n \n    return set_css() + "<div class=\'container\'><nav>" + \\\n               directory + "</nav><section><h1>Download List</h1>" + outstring + "<br/><br /></body></html>"\n \n \ndef downloadlist_access_list(files, starti, endi):\n    """List files function for download_list."""\n    # different extension files, associated links were provided\n    # popup window to view images, video or STL files, other files can be downloaded directly\n    # files are all the data to list, from starti to endi\n    # add file size\n    outstring = ""\n    for index in range(int(starti)-1, int(endi)):\n        fileName, fileExtension = os.path.splitext(files[index])\n        fileExtension = fileExtension.lower()\n        fileSize = sizeof_fmt(os.path.getsize(download_dir+"/"+files[index]))\n        # images files\n        if fileExtension == ".png" or fileExtension == ".jpg" or fileExtension == ".gif":\n            outstring += \'<input type="checkbox" name="filename" value="\' + \\\n                              files[index] + \'"><a href="javascript:;" onClick="window.open(\\\'./../images/\'+ \\\n                              files[index] + \'\\\',\\\'images\\\', \\\'catalogmode\\\',\\\'scrollbars\\\')">\' + \\\n                              files[index] + \'</a> (\' + str(fileSize) + \')<br />\'\n        # stl files\n        elif fileExtension == ".stl":\n            outstring += \'<input type="checkbox" name="filename" value="\' + \\\n                              files[index] + \'"><a href="javascript:;" onClick="window.open(\\\'/static/viewstl.html?src=./../downloads/\' + \\\n                              files[index] + \'\\\',\\\'images\\\', \\\'catalogmode\\\',\\\'scrollbars\\\')">\' + \\\n                              files[index] + \'</a> (\' + str(fileSize) + \')<br />\'\n        # flv files\n        elif fileExtension == ".flv":\n            outstring += \'<input type="checkbox" name="filename" value="\' + \\\n                              files[index] + \'"><a href="javascript:;" onClick="window.open(\\\'/flvplayer?filepath=./../downloads/\' + \\\n            files[index] + \'\\\',\\\'images\\\', \\\'catalogmode\\\',\\\'scrollbars\\\')">\' + files[index] + \'</a> (\' + str(fileSize) + \')<br />\'\n        # direct download files\n        else:\n            outstring += "<input type=\'checkbox\' name=\'filename\' value=\'" + files[index] + \\\n                              "\'><a href=\'./../downloads/" + files[index] + "\'>" + files[index] + \\\n                              "</a> (" + str(fileSize) + ")<br />"\n    return outstring\n \n \n# downloads 方法主要將位於 downloads 目錄下的檔案送回瀏覽器\n@app.route(\'./../downloads/<path:path>\')\ndef downloads(path):\n    """Send files in downloads directory."""\n    return send_from_directory(_curdir+"./../downloads/", path)\n \n \n# 與 file_selector 搭配的取檔程式\ndef downloadselect_access_list(files, starti, endi):\n    """Accompanied with file_selector."""\n    outstring = ""\n    for index in range(int(starti)-1, int(endi)):\n        fileName, fileExtension = os.path.splitext(files[index])\n        fileSize = os.path.getsize(download_dir + "/" + files[index])\n        outstring += \'\'\'<input type="checkbox" name="filename" value="\'\'\' + \\\n                          files[index] + \'\'\'"><a href="#" onclick=\'window.setLink("./../downloads/\'\'\' + \\\n                          files[index] + \'\'\'",0); return false;\'>\'\'\' + files[index] + \\\n                          \'\'\'</a> (\'\'\' + str(sizeof_fmt(fileSize)) + \'\'\')<br />\'\'\'\n    return outstring\n \n \n@app.route(\'/edit_config\', defaults={\'edit\': 1})\n@app.route(\'/edit_config/<path:edit>\')\ndef edit_config(edit):\n    """Config edit html form."""\n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n    if not isAdmin():\n        return set_css() + "<div class=\'container\'><nav>" + \\\n                 directory + "</nav><section><h1>Login</h1><form method=\'post\' action=\'checkLogin\'> \\\n                 Password:<input type=\'password\' name=\'password\'> \\\n                 <input type=\'submit\' value=\'login\'></form> \\\n                 </section></div></body></html>"\n    else:\n        site_title, password = parse_config()\n        # edit config file\n        return set_css() + "<div class=\'container\'><nav>" + \\\n                 directory + "</nav><section><h1>Edit Config</h1><form method=\'post\' action=\'saveConfig\'> \\\n                 Site Title:<input type=\'text\' name=\'site_title\' value=\'"+site_title+"\' size=\'50\'><br /> \\\n                 Password:<input type=\'text\' name=\'password\' value=\'"+password+"\' size=\'50\'><br /> \\\n                 <input type=\'hidden\' name=\'password2\' value=\'"+password+"\'> \\\n                 <input type=\'submit\' value=\'send\'></form> \\\n                 </section></div></body></html>"\n \n \n# edit all page content\n@app.route(\'/edit_page\', defaults={\'edit\': 1})\n@app.route(\'/edit_page/<path:edit>\')\ndef edit_page(edit):\n    """Page edit html form."""\n    # check if administrator\n    if not isAdmin():\n        return redirect(\'/login\')\n    else:\n        head, level, page = parse_content()\n        directory = render_menu(head, level, page)\n        pagedata =file_get_contents(config_dir + "content.htm")\n        outstring = tinymce_editor(directory, cgi.escape(pagedata))\n        return outstring\n \n \ndef editorfoot():\n    return \'\'\'<body>\'\'\'\n \n \ndef editorhead():\n    return \'\'\'\n    <br />\n<!--<script src="//cdn.tinymce.com/4/tinymce.min.js"></script>-->\n<script src="./../static/tinymce4/tinymce/tinymce.min.js"></script>\n<script src="./../static/tinymce4/tinymce/plugins/sh4tinymce/plugin.min.js"></script>\n<link rel = "stylesheet" href = "/static/tinymce4/tinymce/plugins/sh4tinymce/style/style.css">\n<script>\ntinymce.init({\n  selector: "textarea",\n  height: 500,\n  element_format : "html",\n  language : "en",\n  valid_elements : \'*[*]\',\n  extended_valid_elements: "script[language|type|src]",\n  plugins: [\n    \'advlist autolink lists link image charmap print preview hr anchor pagebreak\',\n    \'searchreplace wordcount visualblocks visualchars code fullscreen\',\n    \'insertdatetime media nonbreaking save table contextmenu directionality\',\n    \'emoticons template paste textcolor colorpicker textpattern imagetools sh4tinymce\'\n  ],\n  toolbar1: \'insertfile save undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent\',\n  toolbar2: \'link image | print preview media | forecolor backcolor emoticons | code sh4tinymce\',\n  relative_urls: false,\n  toolbar_items_size: \'small\',\n  file_picker_callback: function(callback, value, meta) {\n        cmsFilePicker(callback, value, meta);\n    },\n  templates: [\n    { title: \'Test template 1\', content: \'Test 1\' },\n    { title: \'Test template 2\', content: \'Test 2\' }\n  ],\n  content_css: [\n    \'//fonts.googleapis.com/css?family=Lato:300,300i,400,400i\',\n    \'//www.tinymce.com/css/codepen.min.css\'\n  ]\n});\n \nfunction cmsFilePicker(callback, value, meta) {\n    tinymce.activeEditor.windowManager.open({\n        title: \'Uploaded File Browser\',\n        url: \'/file_selector?type=\' + meta.filetype,\n        width: 800,\n        height: 550,\n    }, {\n        oninsert: function (url, objVals) {\n            callback(url, objVals);\n        }\n    });\n};\n</script>\n\'\'\'\n \n \n@app.route(\'/error_log\')\ndef error_log(self, info="Error"):\n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n    return set_css() + "<div class=\'container\'><nav>" + \\\n             directory + "</nav><section><h1>ERROR</h1>" + info + "</section></div></body></html>"\n \n \ndef file_get_contents(filename):\n    # open file in utf-8 and return file content\n    with open(filename, encoding="utf-8") as file:\n        return file.read()\n \n \n# 與 file_selector 配合, 用於 Tinymce4 編輯器的檔案選擇\ndef file_lister(directory, type=None, page=1, item_per_page=10):\n    files = os.listdir(directory)\n    total_rows = len(files)\n    totalpage = math.ceil(total_rows/int(item_per_page))\n    starti = int(item_per_page) * (int(page) - 1) + 1\n    endi = starti + int(item_per_page) - 1\n    outstring = file_selector_script()\n    notlast = False\n    if total_rows > 0:\n        outstring += "<br />"\n        if (int(page) * int(item_per_page)) < total_rows:\n            notlast = True\n        if int(page) > 1:\n            outstring += "<a href=\'"\n            outstring += "file_selector?type=" + type + \\\n                              "&page=1&item_per_page=" + \\\n                              str(item_per_page) + "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'><<</a> "\n            page_num = int(page) - 1\n            outstring += "<a href=\'"\n            outstring += "file_selector?type=" + type + \\\n                              "&page=" + str(page_num) + \\\n                              "&item_per_page=" +str(item_per_page) + \\\n                              "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'>Previous</a> "\n        span = 10\n        for index in range(int(page)-span, int(page)+span):\n            if index>= 0 and index< totalpage:\n                page_now = index + 1\n                if page_now == int(page):\n                    outstring += "<font size=\'+1\' color=\'red\'>" + str(page) + " </font>"\n                else:\n                    outstring += "<a href=\'"\n                    outstring += "file_selector?type=" + type + "&page=" + \\\n                                      str(page_now) + "&item_per_page=" + \\\n                                      str(item_per_page) + "&keyword=" + \\\n                                      str(session.get(\'download_keyword\'))\n                    outstring += "\'>" + str(page_now)+"</a> "\n \n        if notlast == True:\n            nextpage = int(page) + 1\n            outstring += " <a href=\'"\n            outstring += "file_selector?type=" + type + "&page=" + \\\n                               str(nextpage) + "&item_per_page=" + \\\n                               str(item_per_page) + "&keyword=" + \\\n                               str(session.get(\'download_keyword\'))\n            outstring += "\'>Next</a>"\n            outstring += " <a href=\'"\n            outstring += "file_selector?type=" + type + "&page=" + \\\n                               str(totalpage) + "&item_per_page=" + \\\n                               str(item_per_page) + "&keyword=" + \\\n                               str(session.get(\'download_keyword\'))\n            outstring += "\'>>></a><br /><br />"\n        if (int(page) * int(item_per_page)) < total_rows:\n            notlast = True\n            if type == "file":\n                outstring += downloadselect_access_list(files, starti, endi) + "<br />"\n            else:\n                outstring += imageselect_access_list(files, starti, endi) + "<br />"\n        else:\n            outstring += "<br /><br />"\n            if type == "file":\n                outstring += downloadselect_access_list(files, starti, total_rows) + "<br />"\n            else:\n                outstring += imageselect_access_list(files, starti, total_rows) + "<br />"\n        if int(page) > 1:\n            outstring += "<a href=\'"\n            outstring += "file_selector?type=" + type + \\\n                              "&page=1&item_per_page=" + str(item_per_page) + \\\n                              "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'><<</a> "\n            page_num = int(page) - 1\n            outstring += "<a href=\'"\n            outstring += "file_selector?type=" + type + "&page=" + \\\n                               str(page_num) + "&item_per_page=" + \\\n                               str(item_per_page) + "&keyword=" + \\\n                               str(session.get(\'download_keyword\'))\n            outstring += "\'>Previous</a>"\n        span = 10\n        for index in range(int(page)-span, int(page)+span):\n            if index >=0 and index < totalpage:\n                page_now = index + 1\n                if page_now == int(page):\n                    outstring += "<font size=\'+1\' color=\'red\'>"+str(page)+" </font>"\n                else:\n                    outstring += "<a href=\'"\n                    outstring += "file_selector?type=" + type + "&page=" + \\\n                                       str(page_now) + "&item_per_page=" + \\\n                                       str(item_per_page) + "&keyword=" + \\\n                                       str(session.get(\'download_keyword\'))\n                    outstring += "\'>" + str(page_now) + "</a> "\n        if notlast == True:\n            nextpage = int(page) + 1\n            outstring += " <a href=\'"\n            outstring += "file_selector?type=" + type + "&page=" + \\\n                               str(nextpage) + "&item_per_page=" + \\\n                               str(item_per_page) + "&keyword=" + \\\n                               str(session.get(\'download_keyword\'))\n            outstring += "\'>Next</a>"\n            outstring += " <a href=\'"\n            outstring += "file_selector?type=" + type + "&page=" + \\\n                               str(totalpage) + "&item_per_page=" + \\\n                               str(item_per_page) + "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'>>></a>"\n    else:\n        outstring += "no data!"\n \n    if type == "file":\n        return outstring+"<br /><br /><a href=\'fileuploadform\'>file upload</a>"\n    else:\n        return outstring+"<br /><br /><a href=\'imageuploadform\'>image upload</a>"\n \n \n# 配合 Tinymce4 讓使用者透過 html editor 引用所上傳的 files 與 images\n@app.route(\'/file_selector\', methods=[\'GET\'])\ndef file_selector():\n    if not isAdmin():\n        return redirect("/login")\n    else:\n        if not request.args.get(\'type\'):\n            type= "file"\n        else:\n            type = request.args.get(\'type\')\n        if not request.args.get(\'page\'):\n            page = 1\n        else:\n            page = request.args.get(\'page\')\n        if not request.args.get(\'item_per_page\'):\n            item_per_page = 10\n        else:\n            item_per_page = request.args.get(\'item_per_page\')\n        if not request.args.get(\'keyword\'):\n            keyword = None\n        else:\n            keyword = request.args.get(\'keyword\')\n \n        if type == "file":\n \n            return file_lister(download_dir, type, page, item_per_page)\n        elif type == "image":\n            return file_lister(image_dir, type, page, item_per_page)\n \n \ndef file_selector_script():\n    return \'\'\'\n<script language="javascript" type="text/javascript">\n$(function(){\n    $(\'.a\').on(\'click\', function(event){\n        setLink();\n    });\n});\n \nfunction setLink (url, objVals) {\n    top.tinymce.activeEditor.windowManager.getParams().oninsert(url, objVals);\n    top.tinymce.activeEditor.windowManager.close();\n    return false;\n}\n</script>\n\'\'\'\n \n \n@app.route(\'/fileaxupload\', methods=[\'POST\'])\n# ajax jquery chunked file upload for flask\ndef fileaxupload():\n    if isAdmin():\n        # need to consider if the uploaded filename already existed.\n        # right now all existed files will be replaced with the new files\n        filename = request.args.get("ax-file-name")\n        flag = request.args.get("start")\n        if flag == "0":\n            file = open(_curdir + "./../downloads/" + filename, "wb")\n        else:\n            file = open(_curdir + "./../downloads/" + filename, "ab")\n        file.write(request.stream.read())\n        file.close()\n        return "files uploaded!"\n    else:\n        return redirect("/login")\n \n \n@app.route(\'/fileuploadform\', defaults={\'edit\':1})\n@app.route(\'/fileuploadform/<path:edit>\')\ndef fileuploadform(edit):\n    if isAdmin():\n        head, level, page = parse_content()\n        directory = render_menu(head, level, page)\n        return set_css() + "<div class=\'container\'><nav>"+ \\\n                 directory + "</nav><section><h1>file upload</h1>" + \\\n                 \'\'\'<script src="./../static/jquery.js" type="text/javascript"></script>\n<script src="./../static/axuploader.js" type="text/javascript"></script>\n<script>\n$(document).ready(function(){\n$(\'.prova\').axuploader({url:\'fileaxupload\', allowExt:[\'jpg\',\'png\',\'gif\',\'7z\',\'pdf\',\'zip\',\'flv\',\'stl\',\'swf\'],\nfinish:function(x,files)\n    {\n        alert(\'All files have been uploaded: \'+files);\n    },\nenable:true,\nremotePath:function(){\nreturn \'downloads/\';\n}\n});\n});\n</script>\n<div class="prova"></div>\n<input type="button" onclick="$(\'.prova\').axuploader(\'disable\')" value="asd" />\n<input type="button" onclick="$(\'.prova\').axuploader(\'enable\')" value="ok" />\n</section></body></html>\n\'\'\'\n    else:\n        return redirect("/login")\n \n \n@app.route(\'/flvplayer\')\n# 需要檢視能否取得 filepath 變數\ndef flvplayer(filepath=None):\n    outstring = \'\'\'\n<object type="application/x-shockwave-flash" data="/static/player_flv_multi.swf" width="320" height="240">\n     <param name="movie" value="player_flv_multi.swf" />\n     <param name="allowFullScreen" value="true" />\n     <param name="FlashVars" value="flv=\'\'\' + filepath + \'\'\'&width=320&height=240&showstop=1&showvolume=1&showtime=1\n     &startimage=/static/startimage_en.jpg&showfullscreen=1&bgcolor1=189ca8&bgcolor2=085c68\n     &playercolor=085c68" />\n</object>\n\'\'\'\n    return outstring\n \n \n@app.route(\'/generate_pages\')\ndef generate_pages():\n    # 必須決定如何處理重複標題頁面的轉檔\n    import os\n    # 確定程式檔案所在目錄, 在 Windows 有最後的反斜線\n    _curdir = os.path.join(os.getcwd(), os.path.dirname(__file__))\n    # 根據 content.htm 內容, 逐一產生各頁面檔案\n    # 在此也要同時配合 render_menu2, 產生對應的 anchor 連結\n    head, level, page = parse_content()\n    # 處理重複標題 head 數列， 再重複標題按照次序加上 1, 2, 3...\n    newhead = []\n    for i, v in enumerate(head):\n        # 各重複標題總數\n        totalcount = head.count(v)\n        # 目前重複標題出現總數\n        count = head[:i].count(v)\n        # 針對重複標題者, 附加目前重複標題出現數 +1, 未重複採原標題\n        newhead.append(v + "-" + str(count + 1) if totalcount > 1 else v)\n    # 刪除 content 目錄中所有 html 檔案\n    filelist = [ f for f in os.listdir(_curdir + "\\\\content\\\\") if f.endswith(".html") ]\n    for f in filelist:\n        os.remove(os.path.join(_curdir + "\\\\content\\\\", f))\n    # 這裡需要建立專門寫出 html 的 write_page\n    # index.html\n    with open(_curdir + "\\\\content\\\\index.html", "w", encoding="utf-8") as f:\n        f.write(get_page2(None, newhead, 0))\n    # sitemap\n    with open(_curdir + "\\\\content\\\\sitemap.html", "w", encoding="utf-8") as f:\n        # sitemap2 需要 newhead\n        f.write(sitemap2(newhead))\n    # 以下轉檔, 改用 newhead 數列\n \n    def visible(element):\n        if element.parent.name in [\'style\', \'script\', \'[document]\', \'head\', \'title\']:\n            return False\n        elif re.match(\'<!--.*-->\', str(element.encode(\'utf-8\'))):\n            return False\n        return True\n \n    search_content = []\n    for i in range(len(newhead)):\n        # 在此必須要將頁面中的 ./../images/ 字串換為 images/, ./../downloads/ 換為 downloads/\n        # 因為 Flask 中靠 ./../images/ 取檔案, 但是一般 html 則採相對目錄取檔案\n        # 此一字串置換在 get_page2 中進行\n        # 加入 tipue search 模式\n        get_page_content = []\n        html_doc = get_page2(newhead[i], newhead, 0, get_page_content)\n        soup = bs4.BeautifulSoup(" ".join(get_page_content), "lxml")\n        search_content.append({"title": newhead[i], "text": " ".join(filter(visible, soup.findAll(text=True))), "tags": "", "url": newhead[i] + ".html"})\n        with open(_curdir + "\\\\content\\\\" + newhead[i] + ".html", "w", encoding="utf-8") as f:\n            # 增加以 newhead 作為輸入\n            f.write(html_doc)\n    # GENERATE js file\n    with open(_curdir + "\\\\content\\\\tipuesearch_content.js", "w", encoding="utf-8") as f:\n        f.write("var tipuesearch = {\\"pages\\": " + str(search_content) + "};")\n    # generate each page html under content directory\n    return "已經將網站轉為靜態網頁. <a href=\'/\'>Home</a>"\n# seperate page need heading and edit variables, if edit=1, system will enter edit mode\n# single page edit will use ssavePage to save content, it means seperate save page\n@app.route(\'/get_page\')\n@app.route(\'/get_page/<heading>\', defaults={\'edit\': 0})\n@app.route(\'/get_page/<heading>/<int:edit>\')\ndef get_page(heading, edit):\n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n    if heading is None:\n        heading = head[0]\n    # 因為同一 heading 可能有多頁, 因此不可使用 head.index(heading) 搜尋 page_order\n    page_order_list, page_content_list = search_content(head, page, heading)\n    return_content = ""\n    pagedata = ""\n    outstring = ""\n    outstring_duplicate = ""\n    pagedata_duplicate = ""\n    outstring_list = []\n    for i in range(len(page_order_list)):\n        #page_order = head.index(heading)\n        page_order = page_order_list[i]\n        if page_order == 0:\n            last_page = ""\n        else:\n            last_page = head[page_order-1] + " << <a href=\'/get_page/" + \\\n                             head[page_order-1] + "\'>Previous</a>"\n        if page_order == len(head) - 1:\n            # no next page\n            next_page = ""\n        else:\n            next_page = "<a href=\'/get_page/"+ head[page_order+1] + \\\n                              "\'>Next</a> >> " + head[page_order+1]\n        if len(page_order_list) > 1:\n            return_content += last_page + " " + next_page + \\\n                                      "<br /><h1>" + heading + "</h1>" + \\\n                                      page_content_list[i] + "<br />"+ \\\n                                      last_page + " " + next_page + "<br /><hr>"\n            pagedata_duplicate = "<h"+level[page_order] + ">" + heading + \\\n                                          "</h"+level[page_order] + ">" + page_content_list[i]\n            outstring_list.append(last_page + " " + next_page + "<br />" + tinymce_editor(directory, cgi.escape(pagedata_duplicate), page_order))\n        else:\n            return_content += last_page + " " + next_page + "<br /><h1>" +\\\n                                      heading + "</h1>" + page_content_list[i] + "<br />" + last_page + " " + next_page\n             \n        pagedata += "<h"+level[page_order] + ">" + heading + "</h" + level[page_order] + ">" + page_content_list[i]\n        # 利用 cgi.escape() 將 specialchar 轉成只能顯示的格式\n        outstring += last_page + " " + next_page + "<br />" + tinymce_editor(directory, cgi.escape(pagedata), page_order)\n     \n    # edit=0 for viewpage\n    if edit == 0:\n        return set_css() + "<div class=\'container\'><nav>" + \\\n                 directory + "</nav><section>" + return_content + "</section></div></body></html>"\n    # enter edit mode\n    else:\n        # check if administrator\n        if not isAdmin():\n            redirect(url_for(\'login\'))\n        else:\n            if len(page_order_list) > 1:\n                # 若碰到重複頁面頁印, 且要求編輯, 則導向 edit_page\n                #return redirect("/edit_page")\n                for i in range(len(page_order_list)):\n                    outstring_duplicate += outstring_list[i] + "<br /><hr>"\n                return outstring_duplicate\n            else:\n            #pagedata = "<h"+level[page_order]+">"+heading+"</h"+level[page_order]+">"+search_content(head, page, heading)\n            #outstring = last_page+" "+next_page+"<br />"+ tinymce_editor(directory, cgi.escape(pagedata), page_order)\n                return outstring\n \n \n# seperate page need heading and edit variables, if edit=1, system will enter edit mode\n# single page edit will use ssavePage to save content, it means seperate save page\n\'\'\'\n@app.route(\'/get_page2\')\n@app.route(\'/get_page2/<heading>\', defaults={\'edit\': 0})\n@app.route(\'/get_page2/<heading>/<int:edit>\')\n\'\'\'\n# before add tipue search function\n#def get_page2(heading, head, edit):\ndef get_page2(heading, head, edit, get_page_content = None):\n    not_used_head, level, page = parse_content()\n    # 直接在此將 ./../images/ 換為 ./.../../images/, ./../downloads/ 換為 ./.../../downloads/, 以 content 為基準的相對目錄設定\n    page = [w.replace(\'src="./.../../images/\', \'src="./.../../images/\') for w in page]\n    page = [w.replace(\'href="./.../../downloads/\', \'href="./.../../downloads/\') for w in page]\n    # 假如有 src="./../static/ace/則換為 src="./../static/ace/\n    page = [w.replace(\'src="./../static/\', \'src="./../static/\') for w in page]\n    directory = render_menu2(head, level, page)\n    if heading is None:\n        heading = head[0]\n    # 因為同一 heading 可能有多頁, 因此不可使用 head.index(heading) 搜尋 page_order\n    page_order_list, page_content_list = search_content(head, page, heading)\n    if get_page_content is not None:\n        get_page_content.extend(page_content_list)\n    return_content = ""\n    pagedata = ""\n    outstring = ""\n    outstring_duplicate = ""\n    pagedata_duplicate = ""\n    outstring_list = []\n    for i in range(len(page_order_list)):\n        #page_order = head.index(heading)\n        page_order = page_order_list[i]\n        if page_order == 0:\n            last_page = ""\n        else:\n            #last_page = head[page_order-1]+ " << <a href=\'/get_page/" + head[page_order-1] + "\'>Previous</a>"\n            last_page = head[page_order-1] + " << <a href=\'"+head[page_order-1] + ".html\'>Previous</a>"\n        if page_order == len(head) - 1:\n            # no next page\n            next_page = ""\n        else:\n            #next_page = "<a href=\'/get_page/"+head[page_order+1] + "\'>Next</a> >> " + head[page_order+1]\n            next_page = "<a href=\'" + head[page_order+1] + ".html\'>Next</a> >> " + head[page_order+1]\n        if len(page_order_list) > 1:\n            return_content += last_page + " " + next_page + "<br /><h1>" + \\\n                                      heading + "</h1>" + page_content_list[i] + \\\n                                      "<br />" + last_page + " "+ next_page + "<br /><hr>"\n            pagedata_duplicate = "<h"+level[page_order] + ">" + heading + "</h" + level[page_order]+">"+page_content_list[i]\n            outstring_list.append(last_page + " " + next_page + "<br />" + tinymce_editor(directory, cgi.escape(pagedata_duplicate), page_order))\n        else:\n            return_content += last_page + " " + next_page + "<br /><h1>" + \\\n                                      heading + "</h1>" + page_content_list[i] + \\\n                                      "<br />" + last_page + " " + next_page\n             \n        pagedata += "<h" + level[page_order] + ">" + heading + \\\n                          "</h" + level[page_order] + ">" + page_content_list[i]\n        # 利用 cgi.escape() 將 specialchar 轉成只能顯示的格式\n        outstring += last_page + " " + next_page + "<br />" + tinymce_editor(directory, cgi.escape(pagedata), page_order)\n     \n    # edit=0 for viewpage\n    if edit == 0:\n        return set_css2() + \'\'\'<div class=\'container\'><nav>\n        \'\'\'+ \\\n        directory + "<div id=\\"tipue_search_content\\">" + return_content + \\\n        \'\'\'</div>\n         \n    <!-- footer -->\n      <div class="container">\n        <div class="row pt-3 mx-auto">\n            <p>\n            <!-- Link back to Colorlib can\'t be removed. Template is licensed under CC BY 3.0. -->\n            Copyright ©<script>document.write(new Date().getFullYear());</script> All rights reserved | This template is made with <i class="icon-heart" aria-hidden="true"></i> by <a href="https://colorlib.com" target="_blank" >Colorlib</a>\n            <!-- Link back to Colorlib can\'t be removed. Template is licensed under CC BY 3.0. -->\n            </p>\n        </div>\n      </div>\n    <!-- for footer -->\n     \n        </div> <!-- for site wrap -->\n            <!-- <script src="../static/chimper/js/jquery-3.3.1.min.js"></script> -->\n            <script src="../static/chimper/js/jquery-migrate-3.0.1.min.js"></script>\n            <script src="../static/chimper/js/jquery-ui.js"></script>\n            <script src="../static/chimper/js/popper.min.js"></script>\n            <script src="../static/chimper/js/bootstrap.min.js"></script>\n            <script src="../static/chimper/js/owl.carousel.min.js"></script>\n            <script src="../static/chimper/js/jquery.stellar.min.js"></script>\n            <script src="../static/chimper/js/jquery.countdown.min.js"></script>\n            <script src="../static/chimper/js/jquery.magnific-popup.min.js"></script>\n            <script src="../static/chimper/js/bootstrap-datepicker.min.js"></script>\n            <script src="../static/chimper/js/aos.js"></script>\n            <!--\n            <script src="../static/chimper/js/typed.js"></script>\n                    <script>\n                    var typed = new Typed(\'.typed-words\', {\n                    strings: ["Web Apps"," WordPress"," Mobile Apps"],\n                    typeSpeed: 80,\n                    backSpeed: 80,\n                    backDelay: 4000,\n                    startDelay: 1000,\n                    loop: true,\n                    showCursor: true\n                    });\n                    </script>\n            -->\n            <script src="../static/chimper/js/main.js"></script>\n        </body></html>\n        \'\'\'\n    # enter edit mode\n    else:\n        # check if administrator\n        if not isAdmin():\n            redirect(url_for(\'login\'))\n        else:\n            if len(page_order_list) > 1:\n                # 若碰到重複頁面頁印, 且要求編輯, 則導向 edit_page\n                #return redirect("/edit_page")\n                for i in range(len(page_order_list)):\n                    outstring_duplicate += outstring_list[i] + "<br /><hr>"\n                return outstring_duplicate\n            else:\n            #pagedata = "<h" + level[page_order]+">" + heading + "</h" + level[page_order] + ">" + search_content(head, page, heading)\n            #outstring = last_page + " " + next_page + "<br />" + tinymce_editor(directory, cgi.escape(pagedata), page_order)\n                return outstring\n \n \n@app.route(\'/image_delete_file\', methods=[\'POST\'])\ndef image_delete_file():\n    if not isAdmin():\n        return redirect("/login")\n    filename = request.form[\'filename\']\n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n    if filename is None:\n        outstring = "no file selected!"\n        return set_css() + "<div class=\'container\'><nav>" + \\\n                 directory + "</nav><section><h1>Delete Error</h1>" + \\\n                 outstring + "<br/><br /></body></html>"\n    outstring = "delete all these files?<br /><br />"\n    outstring += "<form method=\'post\' action=\'image_doDelete\'>"\n    # only one file is selected\n    if isinstance(filename, str):\n        outstring += filename + "<input type=\'hidden\' name=\'filename\' value=\'" + \\\n                          filename + "\'><br />"\n    else:\n        # multiple files selected\n        for index in range(len(filename)):\n            outstring += filename[index] + "<input type=\'hidden\' name=\'filename\' value=\'" + \\\n                              filename[index] + "\'><br />"\n    outstring += "<br /><input type=\'submit\' value=\'delete\'></form>"\n \n    return set_css() + "<div class=\'container\'><nav>" + \\\n             directory + "</nav><section><h1>Download List</h1>" + \\\n             outstring + "<br/><br /></body></html>"\n \n \n@app.route(\'/image_doDelete\', methods=[\'POST\'])\ndef image_doDelete():\n    if not isAdmin():\n        return redirect("/login")\n    # delete files\n    filename = request.form[\'filename\']\n    outstring = "all these files will be deleted:<br /><br />"\n    # only select one file\n    if isinstance(filename, str):\n        try:\n            os.remove(image_dir + "/" + filename)\n            outstring += filename + " deleted!"\n        except:\n            outstring += filename + "Error, can not delete files!<br />"\n    else:\n        # multiple files selected\n        for index in range(len(filename)):\n            try:\n                os.remove(image_dir + "/" + filename[index])\n                outstring += filename[index] + " deleted!<br />"\n            except:\n                outstring += filename[index] + "Error, can not delete files!<br />"\n \n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n \n    return set_css() + "<div class=\'container\'><nav>" + \\\n             directory + "</nav><section><h1>Image List</h1>" + \\\n             outstring + "<br/><br /></body></html>"\n \n \n@app.route(\'/image_list\', methods=[\'GET\'])\ndef image_list():\n    if not isAdmin():\n        return redirect("/login")\n    else:\n        if not request.args.get(\'edit\'):\n            edit= 1\n        else:\n            edit = request.args.get(\'edit\')\n        if not request.args.get(\'page\'):\n            page = 1\n        else:\n            page = request.args.get(\'page\')\n        if not request.args.get(\'item_per_page\'):\n            item_per_page = 10\n        else:\n            item_per_page = request.args.get(\'item_per_page\')\n        if not request.args.get(\'keyword\'):\n            keyword = ""\n        else:\n            keyword = request.args.get(\'keyword\')\n            session[\'image_keyword\'] = keyword\n    files = os.listdir(image_dir)\n    if keyword is not "":\n        files = [elem for elem in files if str(keyword) in elem]\n    files.sort()\n    total_rows = len(files)\n    totalpage = math.ceil(total_rows/int(item_per_page))\n    starti = int(item_per_page) * (int(page) - 1) + 1\n    endi = starti + int(item_per_page) - 1\n    outstring = "<form method=\'post\' action=\'image_delete_file\'>"\n    notlast = False\n    if total_rows > 0:\n        outstring += "<br />"\n        if (int(page) * int(item_per_page)) < total_rows:\n            notlast = True\n        if int(page) > 1:\n            outstring += "<a href=\'"\n            outstring += "image_list?&page=1&item_per_page=" + \\\n                              str(item_per_page) + "&keyword=" + str(session.get(\'image_keyword\'))\n            outstring += "\'><<</a> "\n            page_num = int(page) - 1\n            outstring += "<a href=\'"\n            outstring += "image_list?&page=" + str(page_num) + \\\n                              "&item_per_page=" + str(item_per_page) + \\\n                              "&keyword=" + str(session.get(\'image_keyword\'))\n            outstring += "\'>Previous</a> "\n        span = 10\n        for index in range(int(page)-span, int(page)+span):\n            if index >= 0 and index < totalpage:\n                page_now = index + 1\n                if page_now == int(page):\n                    outstring += "<font size=\'+1\' color=\'red\'>" + str(page) + " </font>"\n                else:\n                    outstring += "<a href=\'"\n                    outstring += "image_list?&page=" + str(page_now) + \\\n                                      "&item_per_page=" + str(item_per_page) + \\\n                                      "&keyword=" + str(session.get(\'image_keyword\'))\n                    outstring += "\'>" + str(page_now) + "</a> "\n \n        if notlast == True:\n            nextpage = int(page) + 1\n            outstring += " <a href=\'"\n            outstring += "image_list?&page=" + str(nextpage) + \\\n                              "&item_per_page=" + str(item_per_page) + \\\n                              "&keyword=" + str(session.get(\'image_keyword\'))\n            outstring += "\'>Next</a>"\n            outstring += " <a href=\'"\n            outstring += "image_list?&page=" + str(totalpage) + \\\n                              "&item_per_page=" + str(item_per_page) + \\\n                              "&keyword=" + str(session.get(\'image_keyword\'))\n            outstring += "\'>>></a><br /><br />"\n        if (int(page) * int(item_per_page)) < total_rows:\n            notlast = True\n            outstring += imagelist_access_list(files, starti, endi) + "<br />"\n        else:\n            outstring += "<br /><br />"\n            outstring += imagelist_access_list(files, starti, total_rows) + "<br />"\n         \n        if int(page) > 1:\n            outstring += "<a href=\'"\n            outstring += "image_list?&page=1&item_per_page=" + \\\n                              str(item_per_page) + "&keyword=" + str(session.get(\'image_keyword\'))\n            outstring += "\'><<</a> "\n            page_num = int(page) - 1\n            outstring += "<a href=\'"\n            outstring += "image_list?&page=" + str(page_num) + \\\n                              "&item_per_page=" + str(item_per_page) + \\\n                              "&keyword=" + str(session.get(\'image_keyword\'))\n            outstring += "\'>Previous</a> "\n        span = 10\n        for index in range(int(page)-span, int(page)+span):\n            if index >=0 and index < totalpage:\n                page_now = index + 1\n                if page_now == int(page):\n                    outstring += "<font size=\'+1\' color=\'red\'>" + str(page) + " </font>"\n                else:\n                    outstring += "<a href=\'"\n                    outstring += "image_list?&page=" + str(page_now) + \\\n                                      "&item_per_page=" + str(item_per_page) + \\\n                                      "&keyword=" + str(session.get(\'image_keyword\'))\n                    outstring += "\'>"+str(page_now) + "</a> "\n        if notlast == True:\n            nextpage = int(page) + 1\n            outstring += " <a href=\'"\n            outstring += "image_list?&page=" + str(nextpage) + \\\n                              "&item_per_page=" + str(item_per_page) + \\\n                              "&keyword=" + str(session.get(\'image_keyword\'))\n            outstring += "\'>Next</a>"\n            outstring += " <a href=\'"\n            outstring += "image_list?&page=" + str(totalpage) + \\\n                              "&item_per_page=" + str(item_per_page) + \\\n                              "&keyword=" + str(session.get(\'image_keyword\'))\n            outstring += "\'>>></a>"\n    else:\n        outstring += "no data!"\n    outstring += "<br /><br /><input type=\'submit\' value=\'delete\'><input type=\'reset\' value=\'reset\'></form>"\n \n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n \n    return set_css() + "<div class=\'container\'><nav>"+ \\\n             directory + "</nav><section><h1>Image List</h1>" + \\\n             outstring + "<br/><br /></body></html>"\n \n \n@app.route(\'/imageaxupload\', methods=[\'POST\'])\n# ajax jquery chunked file upload for flask\ndef imageaxupload():\n    if isAdmin():\n        # need to consider if the uploaded filename already existed.\n        # right now all existed files will be replaced with the new files\n        filename = request.args.get("ax-file-name")\n        flag = request.args.get("start")\n        if flag == "0":\n            file = open(_curdir + "./../images/" + filename, "wb")\n        else:\n            file = open(_curdir + "./../images/" + filename, "ab")\n        file.write(request.stream.read())\n        file.close()\n        return "image files uploaded!"\n    else:\n        return redirect("/login")\n \n \ndef imagelist_access_list(files, starti, endi):\n    # different extension files, associated links were provided\n    # popup window to view images, video or STL files, other files can be downloaded directly\n    # files are all the data to list, from starti to endi\n    # add file size\n    outstring = ""\n    for index in range(int(starti)-1, int(endi)):\n        fileName, fileExtension = os.path.splitext(files[index])\n        fileExtension = fileExtension.lower()\n        fileSize = sizeof_fmt(os.path.getsize(image_dir + "/" + files[index]))\n        # images files\n        if fileExtension == ".png" or fileExtension == ".jpg" or fileExtension == ".gif":\n            outstring += \'<input type="checkbox" name="filename" value="\' + files[index] + \\\n                              \'"><a href="javascript:;" onClick="window.open(\\\'./../images/\' + \\\n                              files[index] + \'\\\',\\\'images\\\', \\\'catalogmode\\\',\\\'scrollbars\\\')">\' + \\\n                              files[index] + \'</a> (\' + str(fileSize) + \')<br />\'\n    return outstring\n \n \n# 與 file_selector 搭配的取影像檔程式\ndef imageselect_access_list(files, starti, endi):\n    outstring = \'\'\'<head>\n<style>\na.xhfbfile {padding: 0 2px 0 0; line-height: 1em;}\na.xhfbfile img{border: none; margin: 6px;}\na.xhfbfile span{display: none;}\na.xhfbfile:hover span{\n    display: block;\n    position: relative;\n    left: 150px;\n    border: #aaa 1px solid;\n    padding: 2px;\n    background-color: #ddd;\n}\na.xhfbfile:hover{\n    background-color: #ccc;\n    opacity: .9;\n    cursor:pointer;\n}\n</style>\n</head>\n\'\'\'\n    for index in range(int(starti)-1, int(endi)):\n        fileName, fileExtension = os.path.splitext(files[index])\n        fileSize = os.path.getsize(image_dir+"/"+files[index])\n        outstring += \'\'\'<a class="xhfbfile" href="#" onclick=\'window.setLink("./../images/\'\'\'+ \\\n                          files[index] + \'\'\'",0); return false;\'>\'\'\' + \\\n                          files[index] + \'\'\'<span style="position: absolute; z-index: 4;"><br /> \\\n                          <img src="./.../../images/\'\'\' + files[index] + \'\'\'" width="150px"/></span></a> \\\n                          (\'\'\' + str(sizeof_fmt(fileSize)) + \'\'\')<br />\'\'\'\n    return outstring\n \n \n@app.route(\'/imageuploadform\', defaults={\'edit\': 1})\n@app.route(\'/imageuploadform/<path:edit>\')\ndef imageuploadform(edit):\n    """image files upload form"""\n    if isAdmin():\n        head, level, page = parse_content()\n        directory = render_menu(head, level, page)\n        return set_css() + "<div class=\'container\'><nav>" + \\\n                 directory + "</nav><section><h1>image files upload</h1>" + \'\'\'\n<script src="./../static/jquery.js" type="text/javascript"></script>\n<script src="./../static/axuploader.js" type="text/javascript"></script>\n<script>\n$(document).ready(function(){\n$(\'.prova\').axuploader({url:\'imageaxupload\', allowExt:[\'jpg\',\'png\',\'gif\'],\nfinish:function(x,files)\n    {\n        alert(\'All files have been uploaded: \'+files);\n    },\nenable:true,\nremotePath:function(){\nreturn \'images/\';\n}\n});\n});\n</script>\n<div class="prova"></div>\n<input type="button" onclick="$(\'.prova\').axuploader(\'disable\')" value="asd" />\n<input type="button" onclick="$(\'.prova\').axuploader(\'enable\')" value="ok" />\n</section></body></html>\n\'\'\'\n    else:\n        return redirect("/login")\n \n \n@app.route(\'/\')\ndef index():\n    head, level, page = parse_content()\n    # 2018.12.13, 將空白轉為"+" 號, 會導致連線錯誤, 改為直接取頁面標題\n    #return redirect("/get_page/" + urllib.parse.quote_plus(head[0], encoding="utf-8"))\n    return redirect("/get_page/" + head[0])\n    # the following will never execute\n    directory = render_menu(head, level, page)\n    if heading is None:\n        heading = head[0]\n    # 因為同一 heading 可能有多頁, 因此不可使用 head.index(heading) 搜尋 page_order\n    page_order_list, page_content_list = search_content(head, page, heading)\n    return_content = ""\n    for i in range(len(page_order_list)):\n        #page_order = head.index(heading)\n        page_order = page_order_list[page_order_list[i]]\n        if page_order == 0:\n            last_page = ""\n        else:\n            last_page = head[page_order-1] + " << <a href=\'/get_page/" + \\\n                             head[page_order-1] + "\'>Previous</a>"\n        if page_order == len(head) - 1:\n            # no next page\n            next_page = ""\n        else:\n            next_page = "<a href=\'/get_page/" + head[page_order+1] + \\\n                              "\'>Next</a> >> " + head[page_order+1]\n        return_content += last_page + " " + next_page + "<br /><h1>" + \\\n                                  heading + "</h1>" + page_content_list[page_order_list[i]] + \\\n                                  "<br />" + last_page + " " + next_page\n \n    return set_css() + "<div class=\'container\'><nav>" + \\\n             directory + "</nav><section>" + return_content + "</section></div></body></html>"\n \n \ndef isAdmin():\n    if session.get(\'admin\') == 1:\n            return True\n    else:\n        return False\n \n \n# use to check directory variable data\n@app.route(\'/listdir\')\ndef listdir():\n    return download_dir + "," + config_dir\n \n \n@app.route(\'/load_list\')\ndef load_list(item_per_page=5, page=1, filedir=None, keyword=None):\n    files = os.listdir(config_dir+filedir+"_programs/")\n    if keyword is None:\n        pass\n    else:\n        session[\'search_keyword\'] = keyword\n        files = [s for s in files if keyword in s]\n    total_rows = len(files)\n    totalpage = math.ceil(total_rows/int(item_per_page))\n    starti = int(item_per_page) * (int(page) - 1) + 1\n    endi = starti + int(item_per_page) - 1\n    outstring = \'\'\'<script>\nfunction keywordSearch(){\n    var oform = document.forms["searchform"];\n    // 取elements集合中 name 屬性為 keyword 的值\n    var getKeyword = oform.elements.keyword.value;\n    // 改為若表單為空, 則列出全部資料\n    //if(getKeyword != ""){\n        window.location = "?brython&keyword="+getKeyword;\n    //}\n}\n</script>\n    <form name="searchform">\n    <input type="text" id="keyword" />\n    <input type="button" id="send" value="查詢" onClick="keywordSearch()"/> \n    </form>\n\'\'\'\n    outstring += "<form name=\'filelist\' method=\'post\' action=\'\'>"\n    notlast = False\n    if total_rows > 0:\n        # turn off the page selector on top\n        \'\'\'\n        outstring += "<br />"\n        if (int(page) * int(item_per_page)) < total_rows:\n            notlast = True\n        if int(page) > 1:\n            outstring += "<a href=\'"\n            outstring += "brython?&page=1&item_per_page="+str(item_per_page)+"&keyword="+str(session.get(\'search_keyword\'))\n            outstring += "\'>{{</a> "\n            page_num = int(page) - 1\n            outstring += "<a href=\'"\n            outstring += "brython?&page="+str(page_num)+"&item_per_page="+str(item_per_page)+"&keyword="+str(session.get(\'search_keyword\'))\n            outstring += "\'>Previous</a> "\n        span = 10\n        for index in range(int(page)-span, int(page)+span):\n            if index>= 0 and index< totalpage:\n                page_now = index + 1 \n                if page_now == int(page):\n                    outstring += "<font size=\'+1\' color=\'red\'>"+str(page)+" </font>"\n                else:\n                    outstring += "<a href=\'"\n                    outstring += "brython?&page="+str(page_now)+"&item_per_page="+str(item_per_page)+"&keyword="+str(session.get(\'search_keyword\'))\n                    outstring += "\'>"+str(page_now)+"</a> "\n \n        if notlast == True:\n            nextpage = int(page) + 1\n            outstring += " <a href=\'"\n            outstring += "brython?&page="+str(nextpage)+"&item_per_page="+str(item_per_page)+"&keyword="+str(session.get(\'search_keyword\'))\n            outstring += "\'>Next</a>"\n            outstring += " <a href=\'"\n            outstring += "brython?&page="+str(totalpage)+"&item_per_page="+str(item_per_page)+"&keyword="+str(session.get(\'search_keyword\'))\n            outstring += "\'>}}</a><br /><br />"\n        \'\'\'\n        if (int(page) * int(item_per_page)) < total_rows:\n            notlast = True\n            outstring += loadlist_access_list(files, starti, endi, filedir) + "<br />"\n        else:\n            outstring += "<br /><br />"\n            outstring += loadlist_access_list(files, starti, total_rows, filedir) + "<br />"\n         \n        if int(page) > 1:\n            outstring += "<a href=\'"\n            outstring += "/"+filedir + "?&page=1&item_per_page=" + str(item_per_page)+"&keyword=" + str(session.get(\'search_keyword\'))\n            outstring += "\'>{{</a> "\n            page_num = int(page) - 1\n            outstring += "<a href=\'"\n            outstring += "/"+filedir + "?&page=" + str(page_num)+"&item_per_page=" + \\\n                              str(item_per_page) + "&keyword=" + str(session.get(\'search_keyword\'))\n            outstring += "\'>Previous</a> "\n        span = 5\n        for index in range(int(page)-span, int(page)+span):\n        #for ($j=$page-$range;$j<$page+$range;$j++)\n            if index >=0 and index < totalpage:\n                page_now = index + 1\n                if page_now == int(page):\n                    outstring += "<font size=\'+1\' color=\'red\'>" + str(page) + " </font>"\n                else:\n                    outstring += "<a href=\'"\n                    outstring += "/" + filedir + "?&page=" + str(page_now) + \\\n                                      "&item_per_page=" + str(item_per_page) + \\\n                                      "&keyword="+str(session.get(\'search_keyword\'))\n                    outstring += "\'>" + str(page_now) + "</a> "\n        if notlast == True:\n            nextpage = int(page) + 1\n            outstring += " <a href=\'"\n            outstring += "/" + filedir + "?&page=" + str(nextpage) + \\\n                              "&item_per_page=" + str(item_per_page) + \\\n                              "&keyword=" + str(session.get(\'search_keyword\'))\n            outstring += "\'>Next</a>"\n            outstring += " <a href=\'"\n            outstring += "/" + filedir + "?&page=" + str(totalpage) + \\\n                              "&item_per_page=" + str(item_per_page) + \\\n                              "&keyword=" + str(session.get(\'search_keyword\'))\n            outstring += "\'>}}</a>"\n    else:\n        outstring += "no data!"\n    #outstring += "<br /><br /><input type=\'submit\' value=\'load\'><input type=\'reset\' value=\'reset\'></form>"\n    outstring += "<br /><br /></form>"\n \n    return outstring\n \n \ndef loadlist_access_list(files, starti, endi, filedir):\n    # different extension files, associated links were provided\n    # popup window to view images, video or STL files, other files can be downloaded directly\n    # files are all the data to list, from starti to endi\n    # add file size\n    outstring = ""\n    for index in range(int(starti)-1, int(endi)):\n        fileName, fileExtension = os.path.splitext(files[index])\n        fileExtension = fileExtension.lower()\n        fileSize = sizeof_fmt(os.path.getsize(config_dir + filedir + "_programs/" + files[index]))\n        # images files\n        if fileExtension == ".png" or fileExtension == ".jpg" or fileExtension == ".gif":\n            outstring += \'<input type="checkbox" name="filename" value="\' + files[index] + \\\n                              \'"><a href="javascript:;" onClick="window.open(\\\'./../downloads/\'+ \\\n                            files[index] + \'\\\',\\\'images\\\', \\\'catalogmode\\\',\\\'scrollbars\\\')">\' + files[index] + \'</a> (\' + str(fileSize)+\')<br />\'\n        # stl files\n        elif fileExtension == ".stl":\n            outstring += \'<input type="checkbox" name="filename" value="\' + files[index] + \'"><a href="javascript:;" onClick="window.open(\\\'/static/viewstl.html?src=./../downloads/\' + \\\n            files[index] + \'\\\',\\\'images\\\', \\\'catalogmode\\\',\\\'scrollbars\\\')">\' + files[index] + \'</a> (\'+str(fileSize)+\')<br />\'\n        # flv files\n        elif fileExtension == ".flv":\n            outstring += \'<input type="checkbox" name="filename" value="\' + files[index] + \'"><a href="javascript:;" onClick="window.open(\\\'/flvplayer?filepath=./../downloads/\' + \\\n            files[index]+\'\\\',\\\'images\\\', \\\'catalogmode\\\',\\\'scrollbars\\\')">\' + files[index] + \'</a> (\'+str(fileSize)+\')<br />\'\n        # py files\n        elif fileExtension == ".py":\n            outstring += \'<input type="radio" name="filename" value="\' + files[index] + \'">\' + files[index] + \' (\' + str(fileSize) + \')<br />\'\n        # direct download files\n        else:\n            outstring += "<input type=\'checkbox\' name=\'filename\' value=\'" + files[index] + \\\n                             "\'><a href=\'/" + filedir + "_programs/" + files[index] + "\'>" + files[index] + "</a> (" + str(fileSize) + ")<br />"\n    return outstring\n \n \n@app.route(\'/login\')\ndef login():\n    """login routine"""\n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n    if not isAdmin():\n        return set_css() + "<div class=\'container\'><nav>" + \\\n                 directory + "</nav><section><h1>Login</h1><form method=\'post\' action=\'checkLogin\'> \\\n                Password:<input type=\'password\' name=\'password\'> \\\n    <input type=\'submit\' value=\'login\'></form> \\\n    </section></div></body></html>"\n    else:\n        return redirect(\'/edit_page\')\n \n \n@app.route(\'/logout\')\ndef logout():\n    session.pop(\'admin\' , None)\n    flash(\'已經登出!\')\n    return redirect(url_for(\'login\'))\n \n \ndef parse_config():\n    if not os.path.isfile(config_dir+"config"):\n        # create config file if there is no config file\n        # default password is admin\n        password="admin"\n        hashed_password = hashlib.sha512(password.encode(\'utf-8\')).hexdigest()\n        with open(config_dir + "config", "w", encoding="utf-8") as f:\n            f.write("siteTitle:CMSimfly \\npassword:"+hashed_password)\n    config = file_get_contents(config_dir + "config")\n    config_data = config.split("\\n")\n    site_title = config_data[0].split(":")[1]\n    password = config_data[1].split(":")[1]\n    return site_title, password\n \n \ndef _remove_h123_attrs(soup):\n    tag_order = 0\n    for tag in soup.find_all([\'h1\', \'h2\', \'h3\']):\n        # 假如標註內容沒有字串\n        #if len(tag.text) == 0:\n        if len(tag.contents) ==0:\n            # 且該標註為排序第一\n            if tag_order == 0:\n                tag.string = "First"\n            else:\n                # 若該標註非排序第一, 則移除無內容的標題標註\n                tag.extract()\n        # 針對單一元件的標題標註\n        elif len(tag.contents) == 1:\n            # 若內容非為純文字, 表示內容為其他標註物件\n            if tag.get_text() == "":\n                # 且該標註為排序第一\n                if tag_order == 0:\n                    # 在最前方插入標題\n                    tag.insert_before(soup.new_tag(\'h1\', \'First\'))\n                else:\n                    # 移除 h1, h2 或 h3 標註, 只留下內容\n                    tag.replaceWithChildren()\n            # 表示單一元件的標題標註, 且標題為單一字串者\n            else:\n                # 判定若其排序第一, 則將 tag.name 為 h2 或 h3 者換為 h1\n                if tag_order == 0:\n                    tag.name = "h1"\n            # 針對其餘單一字串內容的標註, 則保持原樣\n        # 針對內容一個以上的標題標註\n        #elif len(tag.contents) > 1:\n        else:\n            # 假如該標註內容長度大於 1\n            # 且該標註為排序第一\n            if tag_order == 0:\n                # 先移除 h1, h2 或 h3 標註, 只留下內容\n                #tag.replaceWithChildren()\n                # 在最前方插入標題\n                tag.insert_before(soup.new_tag(\'h1\', \'First\'))\n            else:\n                # 只保留標題內容,  去除 h1, h2 或 h3 標註\n                # 為了與前面的內文區隔, 先在最前面插入 br 標註\n                tag.insert_before(soup.new_tag(\'br\'))\n                # 再移除非排序第一的 h1, h2 或 h3 標註, 只留下內容\n                tag.replaceWithChildren()\n        tag_order = tag_order + 1\n \n    return soup\n \ndef parse_content():\n    """use bs4 and re module functions to parse content.htm"""\n    #from pybean import Store, SQLiteWriter\n    # if no content.db, create database file with cms table\n    \'\'\'\n    if not os.path.isfile(config_dir+"content.db"):\n        library = Store(SQLiteWriter(config_dir+"content.db", frozen=False))\n        cms = library.new("cms")\n        cms.follow = 0\n        cms.title = "head 1"\n        cms.content = "content 1"\n        cms.memo = "first memo"\n        library.save(cms)\n        library.commit()\n    \'\'\'\n    # if no content.htm, generate a head 1 and content 1 file\n    if not os.path.isfile(config_dir+"content.htm"):\n        # create content.htm if there is no content.htm\n        with open(config_dir + "content.htm", "w", encoding="utf-8") as f:\n            f.write("<h1>head 1</h1>content 1")\n    subject = file_get_contents(config_dir+"content.htm")\n    # deal with content without content\n    if subject == "":\n        # create content.htm if there is no content.htm\n        with open(config_dir + "content.htm", "w", encoding="utf-8") as f:\n            f.write("<h1>head 1</h1>content 1")\n        subject = "<h1>head 1</h1>content 1"\n    # initialize the return lists\n    head_list = []\n    level_list = []\n    page_list = []\n    # make the soup out of the html content\n    soup = bs4.BeautifulSoup(subject, \'html.parser\')\n    # 嘗試解讀各種情況下的標題\n    soup = _remove_h123_attrs(soup)\n    # 改寫 content.htm 後重新取 subject\n    with open(config_dir + "content.htm", "wb") as f:\n        f.write(soup.encode("utf-8"))\n    subject = file_get_contents(config_dir+"content.htm")\n    # get all h1, h2, h3 tags into list\n    htag= soup.find_all([\'h1\', \'h2\', \'h3\'])\n    n = len(htag)\n    # get the page content to split subject using each h tag\n    temp_data = subject.split(str(htag[0]))\n    if len(temp_data) > 2:\n        subject = str(htag[0]).join(temp_data[1:])\n    else:\n        subject = temp_data[1]\n    if n >1:\n            # i from 1 to i-1\n            for i in range(1, len(htag)):\n                head_list.append(htag[i-1].text.strip())\n                # use name attribute of h* tag to get h1, h2 or h3\n                # the number of h1, h2 or h3 is the level of page menu\n                level_list.append(htag[i-1].name[1])\n                temp_data = subject.split(str(htag[i]))\n                if len(temp_data) > 2:\n                    subject = str(htag[i]).join(temp_data[1:])\n                else:\n                    subject = temp_data[1]\n                # cut the other page content out of htag from 1 to i-1\n                cut = temp_data[0]\n                # add the page content\n                page_list.append(cut)\n    # last i\n    # add the last page title\n    head_list.append(htag[n-1].text.strip())\n    # add the last level\n    level_list.append(htag[n-1].name[1])\n    temp_data = subject.split(str(htag[n-1]))\n    # the last subject\n    subject = temp_data[0]\n    # cut the last page content out\n    cut = temp_data[0]\n    # the last page content\n    page_list.append(cut)\n    return head_list, level_list, page_list\n \ndef render_menu(head, level, page, sitemap=0):\n    \'\'\'允許使用者在 h1 標題後直接加上 h3 標題, 或者隨後納入 h4 之後作為標題標註\'\'\'\n    directory = ""\n    # 從 level 數列第一個元素作為開端\n    current_level = level[0]\n    # 若是 sitemap 則僅列出樹狀架構而沒有套用 css3menu 架構\n    if sitemap:\n        directory += "<ul>"\n    else:\n        directory += "<ul id=\'css3menu1\' class=\'topmenu\'>"\n    # 逐一配合 level 數列中的各標題階次, 一一建立對應的表單或 sitemap\n    for index in range(len(head)):\n        # 用 this_level 取出迴圈中逐一處理的頁面對應層級, 注意取出值為 str\n        this_level = level[index]\n        # 若處理中的層級比上一層級高超過一層, 則將處理層級升級 (處理 h1 後直接接 h3 情況)\n        if (int(this_level) - int(current_level)) > 1:\n            #this_level = str(int(this_level) - 1)\n            # 考慮若納入 h4 也作為標題標註, 相鄰層級可能大於一層, 因此直接用上一層級 + 1\n            this_level = str(int(current_level) + 1)\n        # 若處理的階次比目前已經處理的階次大, 表示位階較低\n        # 其實當 level[0] 完全不會報告此一區塊\n        # 從正在處理的標題階次與前一個元素比對, 若階次低, 則要加入另一區段的 unordered list 標頭\n        # 兩者皆為 str 會轉為整數後比較\n        if this_level > current_level:\n            directory += "<ul>"\n            directory += "<li><a href=\'/get_page/" + head[index] + "\'>" + head[index] + "</a>"\n        # 假如正在處理的標題與前一個元素同位階, 則必須再判定是否為另一個 h1 的樹狀頭\n        elif this_level == current_level:\n            # 若正在處理的標題確實為樹狀頭, 則標上樹狀頭開始標註\n            if this_level == 1:\n                # 這裡還是需要判定是在建立 sitemap 模式或者選單模式\n                if sitemap:\n                    directory += "<li><a href=\'/get_page/" + head[index] + "\'>" + head[index]+"</a>"\n                else:\n                    directory += "<li class=\'topmenu\'><a href=\'/get_page/" + head[index] + "\'>" + head[index] + "</a>"\n            #  假如不是樹狀頭, 則只列出對應的 list\n            else:\n                directory += "<li><a href=\'/get_page/" + head[index] + "\'>" + head[index] + "</a>"\n        # 假如正處理的元素比上一個元素位階更高, 必須要先關掉前面的低位階區段\n        else:\n            directory += "</li>"*(int(current_level) - int(level[index]))\n            directory += "</ul>"*(int(current_level) - int(level[index]))\n            if this_level == 1:\n                if sitemap:\n                    directory += "<li><a href=\'/get_page/" + head[index] + "\'>" + head[index] + "</a>"\n                else:\n                    directory += "<li class=\'topmenu\'><a href=\'/get_page/" + head[index] + "\'>" + head[index] + "</a>"\n            else:\n                directory += "<li><a href=\'/get_page/" + head[index] + "\'>" + head[index] + "</a>"\n        current_level = this_level\n    directory += "</li></ul>"\n    return directory\ndef render_menu2(head, level, page, sitemap=0):\n    """render menu for static site"""\n    site_title, password = parse_config()\n    directory = \'\'\'\n    <div class="site-wrap">\n \n    <div class="site-mobile-menu">\n      <div class="site-mobile-menu-header">\n        <div class="site-mobile-menu-close mt-3">\n          <span class="icon-close2 js-menu-toggle"></span>\n        </div>\n      </div>\n      <div class="site-mobile-menu-body"></div>\n    </div>\n     \n            <header class="site-navbar py-4 bg-white" role="banner">\n              <div class="container-fluid">\n                <div class="row align-items-center">\n                <h1>\'\'\' + site_title + \'\'\'</h1>\n                <div class="pl-4">\n                    <form>\n                    <input type="text" placeholder="Search" name="q" id="tipue_search_input" pattern=".{2,}" title="At least 2 characters" required>\n                    </form>\n                </div>\n                  <!-- <div class="col-11 col-xl-2">\n                    <h1 class="mb-0 site-logo"><a href="index.html" class="text-black h2 mb-0">\'\'\' + site_title + \'\'\'</a></h1> \n                  </div>\n                  -->\n                  <div class="col-12 col-md-10 d-none d-xl-block">\n                    <nav class="site-navigation position-relative text-right" role="navigation">\n    \'\'\'\n     \n    # 從 level 數列第一個元素作為開端, 第一個一定非 level 1 不可\n    current_level = level[0]\n    # 若是 sitemap 則僅列出樹狀架構而沒有套用 css3menu 架構\n    if sitemap:\n        directory += \'\'\'<ul>\n<li>\n<form>\n<div class="tipue_search_group">\n<input type="text" name="q" id="tipue_search_input" pattern=".{2,}" title="At least 2 characters" required><button type="submit" class="tipue_search_button"><div class="tipue_search_icon">⚲</div></button>\n</div>\n</form>\n</li>\n        \'\'\'\n    else:\n        directory += \'\'\'<ul class=\'site-menu js-clone-nav mr-auto d-none d-lg-block\'>\'\'\'\n    # 納入主頁與表單\n    directory += \'\'\'\n                        <li class="active has-children"><a href="index.html">Home</a>\n                        <ul class="dropdown">\n                            <li><a href="sitemap.html">Site Map</a></li>\n                            <li><a href="./../reveal/index.html">reveal</a></li>\n                            <li><a href="./../blog/index.html">blog</a></li>\n                        </ul>\n                      </li>\n                     \'\'\'\n    # 逐一配合 level 數列中的各標題階次, 一一建立對應的表單或 sitemap\n    for index in range(len(head)):\n        # 用 this_level 取出迴圈中逐一處理的頁面對應層級, 注意取出值為 str\n        this_level = level[index]\n        # 若處理中的層級比上一層級高超過一層, 則將處理層級升級 (處理 h1 後直接接 h3 情況)\n        if (int(this_level) - int(current_level)) > 1:\n            #this_level = str(int(this_level) - 1)\n            # 考慮若納入 h4 也作為標題標註, 相鄰層級可能大於一層, 因此直接用上一層級 + 1\n            this_level = str(int(current_level) + 1)\n        # 若處理的階次比目前已經處理的階次大, 表示位階較低\n        # 其實當 level[0] 完全不會報告此一區塊\n        # 從正在處理的標題階次與前一個元素比對, 若階次低, 則要加入另一區段的 unordered list 標頭\n        # 兩者皆為 str 會轉為整數後比較\n        # 目前的位階在上一個標題之後\n        if this_level > current_level:\n            directory += "<ul class=\'dropdown\'>"\n            # 是否加上 class=has-children, 視下一個而定\n            # 目前處理的標題, 並不是最後一個, 因此有下一個標題待處理\n            if index < (len(head)-1):\n                next_level = level[index+1]\n                if this_level < next_level:\n                    # 表示要加上 class=dropdown\n                    directory += "<li class=\'has-children\'><a href=\'" + head[index] + ".html\'>" + head[index] + "</a>"\n                else:\n                    directory += "<li><a href=\'" + head[index] + ".html\'>" + head[index] + "</a>"\n            else:\n                #表示為最後一個\n                directory += "<li><a href=\'" + head[index] + ".html\'>" + head[index] + "</a>"\n        # 假如正在處理的標題與前一個元素同位階, 則必須再判定是否為另一個 h1 的樹狀頭\n        # 目前標題與上一個標題相同\n        elif this_level == current_level:\n            # 是否加上 class=has-children, 視下一個而定\n            # 目前處理的標題, 並不是最後一個, 因此有下一個標題待處理\n            if index < (len(head)-1):\n                next_level = level[index+1]\n                if this_level < next_level:\n                    # 表示要加上 class=dropdown\n                    directory += "<li class=\'has-children\'><a href=\'" + head[index] + ".html\'>" + head[index] + "</a>"\n                else:\n                    directory += "<li><a href=\'" + head[index] + ".html\'>" + head[index] + "</a>"\n            else:\n                #表示為最後一個\n                directory += "<li><a href=\'" + head[index] + ".html\'>" + head[index] + "</a>"\n        # 假如正處理的元素比上一個元素位階更高, 必須要先關掉前面的低位階區段\n        else:\n            directory += "</li>"*(int(current_level) - int(level[index]))\n            directory += "</ul>"*(int(current_level) - int(level[index]))\n            if index < (len(head)-1):\n                next_level = level[index+1]\n                if this_level < next_level:\n                    # 表示要加上 class=dropdown\n                    directory += "<li class=\'has-children\'><a href=\'" + head[index] + ".html\'>" + head[index] + "</a>"\n                else:\n                    directory += "<li><a href=\'" + head[index] + ".html\'>" + head[index] + "</a>"\n            else:\n                #表示為最後一個\n                directory += "<li><a href=\'" + head[index] + ".html\'>" + head[index] + "</a>"\n        current_level = this_level\n    directory += \'\'\'</li>\n                      </ul>\n                </nav>\n              </div>\n              <div class="d-inline-block d-xl-none ml-md-0 mr-auto py-3" style="position: relative; top: 3px;"><a href="#" class="site-menu-toggle js-menu-toggle text-black"><span class="icon-menu h3"></span></a></div>\n              </div>\n \n            </div>\n          </div>\n           \n        </header>\n    \'\'\'\n    return directory\ndef render_menu3(head, level, page, sitemap=0):\n    """render menu for static sitemap"""\n    directory = ""\n    current_level = level[0]\n    if sitemap:\n        directory += "<ul>"\n    else:\n        # before add tipue search function\n        #directory += "<ul id=\'css3menu1\' class=\'topmenu\'>"\n        directory += "<ul id=\'css3menu1\' class=\'topmenu\'><div class=\\"tipue_search_group\\"><input style=\\"width: 6vw;\\" type=\\"text\\" name=\\"q\\" id=\\"tipue_search_input\\" pattern=\\".{2,}\\" title=\\"Press enter key to search\\" required></div>"\n    for index in range(len(head)):\n        this_level = level[index]\n        # 若處理中的層級比上一層級高超過一層, 則將處理層級升級 (處理 h1 後直接接 h3 情況)\n        if (int(this_level) - int(current_level)) > 1:\n            #this_level = str(int(this_level) - 1)\n            this_level = str(int(current_level) + 1)\n        if this_level > current_level:\n            directory += "<ul>"\n            #directory += "<li><a href=\'/get_page/"+head[index]+"\'>"+head[index]+"</a>"\n            # 改為連結到 content/標題.html\n            directory += "<li><a href=\'" + head[index] + ".html\'>" + head[index] + "</a>"\n        elif this_level == current_level:\n            if this_level == 1:\n                if sitemap:\n                    # 改為連結到 content/標題.html\n                    #directory += "<li><a href=\'/get_page/"+head[index]+"\'>"+head[index]+"</a>"\n                    directory += "<li><a href=\'" + head[index] + ".html\'>" + head[index] + "</a>"\n                else:\n                    #directory += "<li class=\'topmenu\'><a href=\'/get_page/"+head[index]+"\'>"+head[index]+"</a>"\n                    directory += "<li class=\'topmenu\'><a href=\'content/" + head[index] + ".html\'>" + head[index] + "</a>"\n            else:\n                #directory += "<li><a href=\'/get_page/"+head[index]+"\'>"+head[index]+"</a>"\n                directory += "<li><a href=\'" + head[index] + ".html\'>" + head[index] + "</a>"\n        else:\n            directory += "</li>"*(int(current_level) - int(level[index]))\n            directory += "</ul>"*(int(current_level) - int(level[index]))\n            if this_level == 1:\n                if sitemap:\n                    #directory += "<li><a href=\'/get_page/"+head[index]+"\'>"+head[index]+"</a>"\n                    directory += "<li><a href=\'" + head[index] + ".html\'>" + head[index] + "</a>"\n                else:\n                    #directory += "<li class=\'topmenu\'><a href=\'/get_page/"+head[index]+"\'>"+head[index]+"</a>"\n                    directory += "<li class=\'topmenu\'><a href=\'" + head[index] + ".html\'>" + head[index] + "</a>"\n            else:\n                #directory += "<li><a href=\'/get_page/"+head[index]+"\'>"+head[index]+"</a>"\n                directory += "<li><a href=\'" + head[index] + ".html\'>" + head[index] + "</a>"\n        current_level = this_level\n    directory += "</li></ul>"\n    return directory\n@app.route(\'/saveConfig\', methods=[\'POST\'])\ndef saveConfig():\n    if not isAdmin():\n        return redirect("/login")\n    site_title = request.form[\'site_title\']\n    password = request.form[\'password\']\n    password2 = request.form[\'password2\']\n    if site_title is None or password is None:\n        return error_log("no content to save!")\n    old_site_title, old_password = parse_config()\n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n    if site_title is None or password is None or password2 != old_password or password == \'\':\n        return set_css() + "<div class=\'container\'><nav>" + \\\n                directory + "</nav><section><h1>Error!</h1><a href=\'/\'>Home</a></body></html>"\n    else:\n        if password == password2 and password == old_password:\n            hashed_password = old_password\n        else:\n            hashed_password = hashlib.sha512(password.encode(\'utf-8\')).hexdigest()\n        file = open(config_dir + "config", "w", encoding="utf-8")\n        file.write("siteTitle:" + site_title + "\\npassword:" + hashed_password)\n        file.close()\n        return set_css() + "<div class=\'container\'><nav>" + \\\n                 directory + "</nav><section><h1>config file saved</h1><a href=\'/\'>Home</a></body></html>"\n \n \n@app.route(\'/savePage\', methods=[\'POST\'])\ndef savePage():\n    """save all pages function"""\n    page_content = request.form[\'page_content\']\n    # when element_format : "html", need to remove the annoying comment to prevent brython exec\n    page_content = page_content.replace(\'// <![CDATA[\', \'\')\n    page_content = page_content.replace(\'// ]]>\', \'\')\n    # check if administrator\n    if not isAdmin():\n        return redirect("/login")\n    if page_content is None:\n        return error_log("no content to save!")\n    # 在插入新頁面資料前, 先複製 content.htm 一分到 content_backup.htm\n    shutil.copy2(config_dir + "content.htm", config_dir + "content_backup.htm")\n    # in Windows client operator, to avoid textarea add extra \\n\n    # fix list object has no attribute "replace"\n    page_content = page_content.replace("\\n","")\n    #page_content =  [w.replace(\'\\n\', \'\') for w in page_content]\n    with open(config_dir + "content.htm", "w", encoding="utf-8") as f:\n        f.write(page_content)\n    return redirect("/edit_page")\n \n \n# use head title to search page content\n\'\'\'\n# search_content(head, page, search)\n# 從 head 與 page 數列中, 以 search 關鍵字進行查詢\n# 原先傳回與 search 關鍵字頁面對應的頁面內容\n# 現在則傳回多重的頁面次序與頁面內容數列\nfind = lambda searchList, elem: [[i for i, x in enumerate(searchList) if x == e] for e in elem]\nhead = ["標題一","標題二","標題三","標題一","標題四","標題五"]\nsearch_result = find(head,["標題一"])[0]\npage_order = []\npage_content = []\nfor i in range(len(search_result)):\n    # 印出次序\n    page_order.append(search_result[i])\n    # 標題為 head[search_result[i]]\n    #  頁面內容則為 page[search_result[i]]\n    page_content.append(page[search_result[i]])\n    # 從 page[次序] 印出頁面內容\n# 準備傳回 page_order 與 page_content 等兩個數列\n\'\'\'\n \n \ndef search_content(head, page, search):\n    """search content"""\n    \'\'\' 舊內容\n    return page[head.index(search)]\n    \'\'\'\n    find = lambda searchList, elem: [[i for i, x in enumerate(searchList) if x == e] for e in elem]\n    search_result = find(head, [search])[0]\n    page_order = []\n    page_content = []\n    for i in range(len(search_result)):\n        # 印出次序\n        page_order.append(search_result[i])\n        # 標題為 head[search_result[i]]\n        #  頁面內容則為 page[search_result[i]]\n        page_content.append(page[search_result[i]])\n        # 從 page[次序] 印出頁面內容\n    # 準備傳回 page_order 與 page_content 等兩個數列\n    return page_order, page_content\n \n \n@app.route(\'/search_form\', defaults={\'edit\': 1})\n@app.route(\'/search_form/<path:edit>\')\ndef search_form(edit):\n    """form of keyword search"""\n    if isAdmin():\n        head, level, page = parse_content()\n        directory = render_menu(head, level, page)\n        return set_css() + "<div class=\'container\'><nav>" + \\\n                 directory + "</nav><section><h1>Search</h1> \\\n                 <form method=\'post\' action=\'doSearch\'> \\\n                 keywords:<input type=\'text\' name=\'keyword\'> \\\n                 <input type=\'submit\' value=\'search\'></form> \\\n                 </section></div></body></html>"\n    else:\n        return redirect("/login")\n \n \n# setup static directory\n@app.route(\'/static/<path:path>\')\ndef send_file(path):\n    """send file function"""\n    return app.send_static_file(static_dir + path)\n \n \n# setup static directory\n#@app.route(\'./../images/<path:path>\')\n@app.route(\'./../images/<path:path>\')\ndef send_images(path):\n    """send image files"""\n    return send_from_directory(_curdir + "./../images/", path)\n \n \n# setup static directory\n@app.route(\'/static/\')\ndef send_static():\n    """send static files"""\n    return app.send_static_file(\'index.html\')\n \n \n# set_admin_css for administrator\ndef set_admin_css():\n    """set css for admin"""\n    outstring = \'\'\'<!doctype html>\n<html><head>\n<meta http-equiv="content-type" content="text/html;charset=utf-8">\n<title>\'\'\' + init.Init.site_title + \'\'\'</title> \\\n<link rel="stylesheet" type="text/css" href="/static/cmsimply.css">\n\'\'\' + syntaxhighlight()\n \n    outstring += \'\'\'\n<script src="./../static/jquery.js"></script>\n<script type="text/javascript">\n$(function(){\n    $("ul.topmenu> li:has(ul) > a").append(\'<div class="arrow-right"></div>\');\n    $("ul.topmenu > li ul li:has(ul) > a").append(\'<div class="arrow-right"></div>\');\n});\n</script>\n\'\'\'\n    # SSL for uwsgi operation\n    if uwsgi:\n        outstring += \'\'\'\n<script type="text/javascript">\nif ((location.href.search(/http:/) != -1) && (location.href.search(/login/) != -1)) \\\nwindow.location= \'https://\' + location.host + location.pathname + location.search;\n</script>\n\'\'\'\n    site_title, password = parse_config()\n    outstring += \'\'\'\n</head><header><h1>\'\'\' + site_title + \'\'\'</h1> \\\n<confmenu>\n<ul>\n<li><a href="/">Home</a></li>\n<li><a href="/sitemap">SiteMap</a></li>\n<li><a href="/edit_page">Edit All</a></li>\n<li><a href="\'\'\' + str(request.url) + \'\'\'/1">Edit</a></li>\n<li><a href="/edit_config">Config</a></li>\n<li><a href="/search_form">Search</a></li>\n<li><a href="/imageuploadform">Image Upload</a></li>\n<li><a href="/image_list">Image List</a></li>\n<li><a href="/fileuploadform">File Upload</a></li>\n<li><a href="/download_list">File List</a></li>\n<li><a href="/logout">Logout</a></li>\n<li><a href="/generate_pages">generate_pages</a></li>\n\'\'\'\n    outstring += \'\'\'\n</ul>\n</confmenu></header>\n\'\'\'\n    return outstring\n \n \ndef set_css():\n    """set css for dynamic site"""\n    outstring = \'\'\'<!doctype html>\n<html><head>\n<meta http-equiv="content-type" content="text/html;charset=utf-8">\n<title>\'\'\' + init.Init.site_title + \'\'\'</title> \\\n<link rel="stylesheet" type="text/css" href="/static/cmsimply.css">\n<link rel="shortcut icon" href="/static/favicons.png">\n\'\'\' + syntaxhighlight()\n \n    outstring += \'\'\'\n<script src="./../static/jquery.js"></script>\n<script type="text/javascript">\n$(function(){\n    $("ul.topmenu> li:has(ul) > a").append(\'<div class="arrow-right"></div>\');\n    $("ul.topmenu > li ul li:has(ul) > a").append(\'<div class="arrow-right"></div>\');\n});\n</script>\n\'\'\'\n    if uwsgi:\n        outstring += \'\'\'\n<script type="text/javascript">\nif ((location.href.search(/http:/) != -1) && (location.href.search(/login/) != -1)) \\\nwindow.location= \'https://\' + location.host + location.pathname + location.search;\n</script>\n\'\'\'\n    site_title, password = parse_config()\n    outstring += \'\'\'\n</head><header><h1>\'\'\' + site_title + \'\'\'</h1> \\\n<confmenu>\n<ul>\n<li><a href="/">Home</a></li>\n<li><a href="/sitemap">Site Map</a></li>\n\'\'\'\n    if isAdmin():\n        outstring += \'\'\'\n<li><a href="/edit_page">Edit All</a></li>\n<li><a href="\'\'\' + str(request.url) + \'\'\'/1">Edit</a></li>\n<li><a href="/edit_config">Config</a></li>\n<li><a href="/search_form">Search</a></li>\n<li><a href="/imageuploadform">image upload</a></li>\n<li><a href="/image_list">image list</a></li>\n<li><a href="/fileuploadform">file upload</a></li>\n<li><a href="/download_list">file list</a></li>\n<li><a href="/logout">logout</a></li>\n<li><a href="/generate_pages">generate_pages</a></li>\n\'\'\'\n    else:\n        outstring += \'\'\'\n<li><a href="/login">login</a></li>\n\'\'\'\n    outstring += \'\'\'\n</ul>\n</confmenu></header>\n\'\'\'\n    return outstring\n \n \ndef set_css2():\n    """set css for static site"""\n    static_head = \'\'\'\n        <head>\n        <title>\'\'\' + init.Init.site_title + \'\'\'</title>\n        <meta charset="utf-8">\n        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">\n        <link href="https://fonts.googleapis.com/css?family=Quicksand:300,400,500,700,900" rel="stylesheet">\n        <link rel="stylesheet" href="./../static/chimper/fonts/icomoon/style.css">\n        <link rel="stylesheet" href="./../static/chimper/css/bootstrap.min.css">\n        <link rel="stylesheet" href="./../static/chimper/css/magnific-popup.css">\n        <link rel="stylesheet" href="./../static/chimper/css/jquery-ui.css">\n        <link rel="stylesheet" href="./../static/chimper/css/owl.carousel.min.css">\n        <link rel="stylesheet" href="./../static/chimper/css/owl.theme.default.min.css">\n        <link rel="stylesheet" href="./../static/chimper/css/bootstrap-datepicker.css">\n        <link rel="stylesheet" href="./../static/chimper/fonts/flaticon/font/flaticon.css">\n        <link rel="stylesheet" href="./../static/chimper/css/aos.css">\n        <link rel="stylesheet" href="./../static/chimper/css/style.css">\n        <link rel="shortcut icon" href="./../static/favicons.png">\n         \n        <style type=\'text/css\'>\n            .site-section {\n            background-color: #FFFF;\n            padding: 40px 40px;\n            }\n            body > div > div.dropdown.open {\n                display: block;\n            }\n        </style>\n    \'\'\'\n    outstring = \'\'\'<!DOCTYPE html><html>\'\'\' + static_head + \'\'\'\n        <!-- <script src="./../static/jquery.js"></script> -->\n        <!-- <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script> -->\n        <script src="../static/chimper/js/jquery-3.3.1.min.js"></script>\n        <link rel="stylesheet" href="./../static/tipuesearch/css/normalize.min.css">\n        <script src="./../static/tipuesearch/tipuesearch_set.js"></script>\n        <script src="tipuesearch_content.js"></script>\n        <link rel="stylesheet" href="./../static/tipuesearch/css/tipuesearch.css">\n        <script src="./../static/tipuesearch/tipuesearch.js"></script>\n        <script>\n            /* original tipuesearch\n            $(document).ready(function() {\n                 $(\'#tipue_search_input\').tipuesearch();\n            });\n            */\n            // customed doSearch\n            function doSearch() {\n                $(\'#tipue_search_input\').tipuesearch({\n                    newWindow: true, \n                    minimumLength: 2,\n                    wholeWords: false, // for search 中文\n                });\n            }\n            $(document).ready(doSearch);\n        </script>\n        \'\'\' + syntaxhighlight2()\n \n    site_title, password = parse_config()\n    if uwsgi:\n        outstring += \'\'\'\n<script type="text/javascript">\nif ((location.href.search(/http:/) != -1) && (location.href.search(/login/) != -1)) \\\nwindow.location= \'https://\' + location.host + location.pathname + location.search;\n</script></head><body>\n\'\'\'\n    else:\n        outstring += \'\'\'\n</head>\n<body>\n\'\'\'\n    return outstring\n \n \ndef set_footer():\n    """footer for page"""\n    return "<footer> \\\n        <a href=\'/edit_page\'>Edit All</a>| \\\n        <a href=\'" + str(request.url) + "/1\'>Edit</a>| \\\n        <a href=\'edit_config\'>Config</a> \\\n        <a href=\'login\'>login</a>| \\\n        <a href=\'logout\'>logout</a> \\\n        <br />Powered by <a href=\'http://cmsimple.cycu.org\'>CMSimply</a> \\\n        </footer> \\\n        </body></html>"\n@app.route(\'/sitemap\', defaults={\'edit\': 1})\n@app.route(\'/sitemap/<path:edit>\')\ndef sitemap(edit):\n    """sitemap for dynamic site"""\n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n    sitemap = render_menu(head, level, page, sitemap=1)\n    return set_css() + "<div class=\'container\'><nav>" + directory + \\\n             "</nav><section><h1>Site Map</h1>" + sitemap + \\\n             "</section></div></body></html>"\ndef sitemap2(head):\n    """sitemap for static content generation"""\n    edit = 0\n    not_used_head, level, page = parse_content()\n    directory = render_menu2(head, level, page)\n    # 先改為使用 render_menu3 而非 render_menu2\n    sitemap = render_menu3(head, level, page, sitemap=1)\n    # add tipue search id\n    return set_css2() + "<div class=\'container\'><nav>" + directory + \\\n             "</nav><section><h1>Site Map</h1><div id=\\"tipue_search_content\\"></div>" + sitemap + \\\n             "</section></div></body></html>"\n \n \ndef sizeof_fmt(num):\n    """size formate"""\n    for x in [\'bytes\',\'KB\',\'MB\',\'GB\']:\n        if num < 1024.0:\n            return "%3.1f%s" % (num, x)\n        num /= 1024.0\n    return "%3.1f%s" % (num, \'TB\')\n@app.route(\'/ssavePage\', methods=[\'POST\'])\ndef ssavePage():\n    """seperate save page function"""\n    page_content = request.form[\'page_content\']\n    # when element_format : "html", need to remove the annoying comment to prevent brython exec\n    page_content = page_content.replace(\'// <![CDATA[\', \'\')\n    page_content = page_content.replace(\'// ]]>\', \'\')\n    page_order = request.form[\'page_order\']\n    if not isAdmin():\n        return redirect("/login")\n    if page_content is None:\n        return error_log("no content to save!")\n    # 請注意, 若啟用 fullpage plugin 這裡的 page_content tinymce4 會自動加上 html 頭尾標註\n    page_content = page_content.replace("\\n","")\n    head, level, page = parse_content()\n    original_head_title = head[int(page_order)]\n    # 在插入新頁面資料前, 先複製 content.htm 一分到 content_backup.htm\n    shutil.copy2(config_dir + "content.htm", config_dir + "content_backup.htm")\n    file = open(config_dir + "content.htm", "w", encoding="utf-8")\n    for index in range(len(head)):\n        if index == int(page_order):\n            file.write(page_content)\n        else:\n            file.write("<h"+str(level[index])+ ">" + str(head[index]) + "</h" + \\\n                          str(level[index])+">"+str(page[index]))\n    file.close()\n    # if every ssavePage generate_pages needed\n    #generate_pages()\n \n    # if head[int(page_order)] still existed and equal original_head_title, go back to origin edit status, otherwise go to "/"\n    # here the content is modified, we need to parse the new page_content again\n    head, level, page = parse_content()\n    # for debug\n    # print(original_head_title, head[int(page_order)])\n    # 嘗試避免因最後一個標題刪除儲存後產生 internal error 問題\n    if original_head_title is None:\n        return redirect("/")\n    try:\n        if original_head_title == head[int(page_order)]:\n            #edit_url = "/get_page/" + urllib.parse.quote_plus(head[int(page_order)]) + "&edit=1"\n            #edit_url = "/get_page/" + urllib.parse.quote_plus(original_head_title) + "/1"\n            edit_url = "/get_page/" + original_head_title + "/1"\n            return redirect(edit_url)\n        else:\n            return redirect("/")\n    except:\n        return redirect("/")\n \n \ndef syntaxhighlight():\n    return \'\'\'\n<script type="text/javascript" src="./../static/syntaxhighlighter/shCore.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushJScript.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushJava.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushPython.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushSql.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushXml.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushPhp.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushLua.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushCpp.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushCss.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushCSharp.js"></script>\n<link type="text/css" rel="stylesheet" href="/static/syntaxhighlighter/css/shCoreDefault.css"/>\n<script type="text/javascript">SyntaxHighlighter.all();</script>\n \n<!-- for LaTeX equations 暫時不用\n    <script src="https://scrum-3.github.io/web/math/MathJax.js?config=TeX-MML-AM_CHTML" type="text/javascript"></script>\n    <script type="text/javascript">\n    init_mathjax = function() {\n        if (window.MathJax) {\n            // MathJax loaded\n            MathJax.Hub.Config({\n                tex2jax: {\n                    inlineMath: [ [\'$\',\'$\'], ["\\\\\\\\(","\\\\\\\\)"] ],\n                    displayMath: [ [\'$$\',\'$$\'], ["\\\\\\\\[","\\\\\\\\]"] ]\n                },\n                displayAlign: \'left\', // Change this to \'center\' to center equations.\n                "HTML-CSS": {\n                    styles: {\'.MathJax_Display\': {"margin": 0}}\n                }\n            });\n            MathJax.Hub.Queue(["Typeset",MathJax.Hub]);\n        }\n    }\n    init_mathjax();\n    </script>\n -->\n <!-- 暫時不用\n<script src="./../static/fengari-web.js"></script>\n<script type="text/javascript" src="./../static/Cango-13v08-min.js"></script>\n<script type="text/javascript" src="./../static/CangoAxes-4v01-min.js"></script>\n<script type="text/javascript" src="./../static/gearUtils-05.js"></script>\n-->\n<!-- for Brython 暫時不用\n<script src="https://scrum-3.github.io/web/brython/brython.js"></script>\n<script src="https://scrum-3.github.io/web/brython/brython_stdlib.js"></script>\n-->\n\'\'\'\n \n \n \ndef syntaxhighlight2():\n    return \'\'\'\n<script type="text/javascript" src="./../static/syntaxhighlighter/shCore.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushJScript.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushJava.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushPython.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushSql.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushXml.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushPhp.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushLua.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushCpp.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushCss.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushCSharp.js"></script>\n<link type="text/css" rel="stylesheet" href="./../static/syntaxhighlighter/css/shCoreDefault.css"/>\n<script type="text/javascript">SyntaxHighlighter.all();</script>\n \n<!-- for LaTeX equations 暫時不用\n<script src="https://scrum-3.github.io/web/math/MathJax.js?config=TeX-MML-AM_CHTML" type="text/javascript"></script>\n<script type="text/javascript">\ninit_mathjax = function() {\n    if (window.MathJax) {\n        // MathJax loaded\n        MathJax.Hub.Config({\n            tex2jax: {\n                inlineMath: [ [\'$\',\'$\'], ["\\\\\\\\(","\\\\\\\\)"] ],\n                displayMath: [ [\'$$\',\'$$\'], ["\\\\\\\\[","\\\\\\\\]"] ]\n            },\n            displayAlign: \'left\', // Change this to \'center\' to center equations.\n            "HTML-CSS": {\n                styles: {\'.MathJax_Display\': {"margin": 0}}\n            }\n        });\n        MathJax.Hub.Queue(["Typeset",MathJax.Hub]);\n    }\n}\ninit_mathjax();\n</script>\n-->\n<!-- 暫時不用\n<script src="./../static/fengari-web.js"></script>\n<script type="text/javascript" src="./../static/Cango-13v08-min.js"></script>\n<script type="text/javascript" src="./../static/CangoAxes-4v01-min.js"></script>\n<script type="text/javascript" src="./../static/gearUtils-05.js"></script>\n-->\n<!-- for Brython 暫時不用\n<script src="https://scrum-3.github.io/web/brython/brython.js"></script>\n<script src="https://scrum-3.github.io/web/brython/brython_stdlib.js"></script>\n-->\n\'\'\'\n \n \ndef tinymce_editor(menu_input=None, editor_content=None, page_order=None):\n    sitecontent =file_get_contents(config_dir + "content.htm")\n    editor = set_admin_css() + editorhead() + \'\'\'</head>\'\'\' + editorfoot()\n    # edit all pages\n    if page_order is None:\n        outstring = editor + "<div class=\'container\'><nav>" + \\\n                        menu_input + "</nav><section><form method=\'post\' action=\'savePage\'> \\\n                        <textarea class=\'simply-editor\' name=\'page_content\' cols=\'50\' rows=\'15\'>" +  \\\n                        editor_content + "</textarea><input type=\'submit\' value=\'save\'> \\\n                        </form></section></body></html>"\n    else:\n        # add viewpage button wilie single page editing\n        head, level, page = parse_content()\n        outstring = editor + "<div class=\'container\'><nav>" + \\\n                        menu_input+"</nav><section><form method=\'post\' action=\'/ssavePage\'> \\\n                        <textarea class=\'simply-editor\' name=\'page_content\' cols=\'50\' rows=\'15\'>" + \\\n                        editor_content + "</textarea><input type=\'hidden\' name=\'page_order\' value=\'" + \\\n                        str(page_order) + "\'><input type=\'submit\' value=\'save\'>"\n        outstring += \'\'\'<input type=button onClick="location.href=\'/get_page/\'\'\' + \\\n                    head[page_order] + \\\n                    \'\'\'\'" value=\'viewpage\'></form></section></body></html>\'\'\'\n    return outstring\n \n \ndef unique(items):\n    """make items element unique"""\n    found = set([])\n    keep = []\n    count = {}\n    for item in items:\n        if item not in found:\n            count[item] = 0\n            found.add(item)\n            keep.append(item)\n        else:\n            count[item] += 1\n            keep.append(str(item) + "_" + str(count[item]))\n    return keep\n \n \nif __name__ == "__main__":\n    app.run() \n \n', 'tags': '', 'url': 'ROC Flag(W14).html'}, {'title': 'ROC', 'text': '\n  啟動 Brython  \n \n \n \n  導入 Brython 標準程式庫  \n \n \n \n  啟動 Brython  \n \n \n \n  導入 Brython 標準程式庫  \n \n \n \n  啟動 Brython  \n \n \n', 'tags': '', 'url': 'ROC.html'}, {'title': 'VM虛擬主機(W15)', 'text': 'W15 \n 1.到ubuntu網站下載Sever \n ubuntu網站: https://www.ubuntu.com/ \n \n \n 2.打開VM-->創建一台虛擬主機 \n \n 2.設定主機名稱及分配記憶體(不建議低於2048MB) \n \n 3.Flie size通常都使用500GB,硬碟檔類型使用VMDK之後轉實體比較方便 \n 基本上我們的硬碟分配會使用動態分配(Dynamically allocated)用多少拿多少 \n 如果使用固定大小會很吃電腦的硬碟容量 \n \n 4.設定完打開虛擬主機--->載入檔案 \n \n 5.按Start-->設定 \n 選擇English語言 \n \n 這裡不用改直接Done \n \n 這裡選第一個安裝,其他兩個是多主機雲端協同用的 \n \n 這裡是網路設定,現在是以NAT,就可以直接下一步了 \n \n 這裡是設定proxy,打上學校使用的proxy\xa0 \xa0 \xa0  http://140.130.17.4:3128 \n 若不使用可留白 \n \n 這是ubuntu的鏡像網址,保留預設就好 \n \n 這裡是要分割硬碟,並格式化,這裡選第一個使用整顆硬碟來格式化 \n \n 這裡是要安裝的硬碟 \n \n 確認之後就可以開始格式化了 \n \n \n 再來要設定名稱和密碼 \n \n 這是問你要不要使用SSH key,打勾Install OpenSSH sever,就可以下一步了 \n \n 這裡直接下一步 \n \n 等待安裝完就完成了 \n \n 安裝完選擇Reboot Now就可以使用了 \n \n 剛開始進入它會叫你輸入名稱和密碼,因為使用sudo都需要登入 \n 如果要關機要打指令 sudo halt \xa0 \xa0這是關機並沒有關電源 \n 使用 sudo shutdown -h now\xa0 \xa0 關機並關電源 \n', 'tags': '', 'url': 'VM虛擬主機(W15).html'}, {'title': 'SSL-VPN(W15)', 'text': '到學校電算中心有SSL-VPN服務教學 \n 參考網址: https://nfucc.nfu.edu.tw/zh/download/download-network/ssl-vpn \n 1. 首次使用須先安裝SSL VPN 程式(Juniper Networks Connect) \n (1)請依您的作業系統版本下載使用者端程式： 連結 \n (2)程式下載完成後，點擊兩下開始安裝。 \xa0 \xa0 \n \xa0 \xa0 \n \n 2.\xa0 進行身份驗證(可由Juniper Network Connect或IE，請擇一進行身分認證) \n \n 2-1:\xa0Juniper\xa0Network Connect 應用程式認證 \n \n \n 1."點選搜尋" > 輸入程式名稱為Network Connect> 點擊Network Connect \n \n 2.執行程式後，於"登入頁面"輸入網址 : \xa0 https://sslvpn9.twaren.net/nfu \xa0 ，後按下"執行" \n \n 3.輸入使用者帳號密碼，請填入校務行政AD帳號及密碼。請完整填寫您在校務行政AD帳號以及密碼，否則國網中心找不到對象進行身份確認 \xa0 ！(例: 員工編號或學號@ctx10.nfu.edu.tw） \n \n (以下為舊版本的登入畫面) \n \n \n 4.出現"設定控制-警告"視窗，按下"是" \n \n \n \n \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa05.螢幕右下角顯示"已連接"，表示已成功連線。 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n \n \n 2-2: IE網認證 \n \n 1.請在IE瀏覽器上按下右鍵 使用"以系統管理員身分執行" \n 登入頁面請輸入：\xa0 https://sslvpn9.twaren.net/nfu ，按下「執行」，會出現帳號與密碼登入欄位。 請填入虎尾科技大學的校務行政AD帳號及密碼，並請輸入下方驗證碼，進行身份確認。 請完整填寫您在虎尾科技大學的校務行政AD帳號以及密碼 ，否則國網中心找不到對象進行身份確認！ \n (例: \xa0員工編號或學號@ctx10.nfu.edu.tw ） 填寫完畢以後按下Login登入就會開始進行身份確認，請稍後一段時間。 \n \n \n \n \n \n 2.點選「開始」\xa0 \n \n 3.點選「是」，SSL VPN程式安裝完畢後，就會開始跟你的電腦建立連線，請稍後一段時間。 \n \n \n \n \n \n \xa0 \n \n \xa0 5.\xa0 VPN 連線建立完成 \n \n 連線建立完成後，在電腦的工作列上(桌面右下角)，會出現 Juniper Network Connect VPN Client的圖示，表示VPN連線已經成功的建立在你的電腦上了。點擊圖示兩下，即可查看連線資訊。 (註:指派IP:一定為120.113.100.XX) 。 到此，您的SSL-VPN連線已經成功的建立，不管是在家裡還是出差，您的電腦就像在學校使用一般，您可以自由的使用虎尾科技大學自己擁有的網路資源。 \n \n \n \n 6.\xa0 連線IP檢視 (*) \n \n 如何得知連線的 IP 究竟是什麼呢？您可透過網際網路上提供 IP 位址偵測服務的網站進行確認，例如\xa0 http://showip.net/ \n \n \n', 'tags': '', 'url': 'SSL-VPN(W15).html'}, {'title': '校園軟體下載專區', 'text': '學校提供免費的軟體,可以使用學校eCare帳號進行下載 \n 以下可下載的軟體: \n 1.microsoft \n 2. Antivrus Software \n 3. MATLAB Software \n 4.AUTODESK \n 5. Free Software \n 相關資料源自電算中心網址: https://nfucc.nfu.edu.tw/zh/download \n', 'tags': '', 'url': '校園軟體下載專區.html'}, {'title': '下載教學', 'text': '1.前往學校電算中心網站-下載專區 \n 網址: https://nfucc.nfu.edu.tw/zh/download \n 點選校園授權軟體下載專區 \n \n 2.登入校務eCare帳號 \n \n 3.點選想要下載的軟體(範例:Microsoft) \n \n 4.選取軟體 \n \n 5.選取下載版本即可完成 \n', 'tags': '', 'url': '下載教學.html'}]};